{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationContext, NavigationRouteContext, CommonActions, useTheme } from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 50;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nexport default function BottomTabBar(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors,\n    activeBackgroundColor = _ref.activeBackgroundColor,\n    activeTintColor = _ref.activeTintColor,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    allowFontScaling = _ref.allowFontScaling,\n    inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n    inactiveTintColor = _ref.inactiveTintColor,\n    _ref$keyboardHidesTab = _ref.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref$keyboardHidesTab === void 0 ? false : _ref$keyboardHidesTab,\n    labelPosition = _ref.labelPosition,\n    labelStyle = _ref.labelStyle,\n    safeAreaInsets = _ref.safeAreaInsets,\n    showIcon = _ref.showIcon,\n    showLabel = _ref.showLabel,\n    style = _ref.style,\n    tabStyle = _ref.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState(function () {\n      var _Dimensions$get = Dimensions.get('window'),\n        _Dimensions$get$heigh = _Dimensions$get.height,\n        height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh,\n        _Dimensions$get$width = _Dimensions$get.width,\n        width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width;\n      return {\n        height: height,\n        width: width\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dimensions = _React$useState2[0],\n    setDimensions = _React$useState2[1];\n  var _React$useState3 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    layout = _React$useState4[0],\n    setLayout = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    keyboardShown = _React$useState6[0],\n    setKeyboardShown = _React$useState6[1];\n  var _React$useState7 = React.useState(function () {\n      return new Animated.Value(1);\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    visible = _React$useState8[0];\n  var routes = state.routes;\n  React.useEffect(function () {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: useNativeDriver\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n  React.useEffect(function () {\n    var handleOrientationChange = function handleOrientationChange(_ref2) {\n      var window = _ref2.window;\n      setDimensions(window);\n    };\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setKeyboardShown(true);\n    };\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: useNativeDriver\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n    };\n    Dimensions.addEventListener('change', handleOrientationChange);\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n    return function () {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var shouldUseHorizontalLabels = function shouldUseHorizontalLabels() {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n    if (!adaptive) {\n      return false;\n    }\n    if (layout.width >= 768) {\n      var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n      var flattenedStyle = StyleSheet.flatten(tabStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      var isLandscape = dimensions.width > dimensions.height;\n      return isLandscape;\n    }\n  };\n  var defaultInsets = useSafeArea();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, keyboardHidesTabBar ? {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardShown ? 'absolute' : null\n    } : null, {\n      height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n      paddingBottom: insets.bottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'\n  }, React.createElement(View, {\n    style: styles.content,\n    onLayout: handleLayout\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread({}, CommonActions.navigate(route.name), {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: shouldUseHorizontalLabels(),\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      label: label,\n      showIcon: showIcon,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","View","Animated","StyleSheet","Keyboard","Platform","Dimensions","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useSafeArea","BottomTabItem","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","BottomTabBar","_ref","state","navigation","descriptors","activeBackgroundColor","activeTintColor","_ref$adaptive","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","_ref$keyboardHidesTab","keyboardHidesTabBar","labelPosition","labelStyle","safeAreaInsets","showIcon","showLabel","style","tabStyle","_safeAreaInsets$top","_safeAreaInsets$right","_safeAreaInsets$botto","_safeAreaInsets$left","_useTheme","colors","_React$useState","useState","_Dimensions$get","get","_Dimensions$get$heigh","height","_Dimensions$get$width","width","_React$useState2","_slicedToArray","dimensions","setDimensions","_React$useState3","_React$useState4","layout","setLayout","_React$useState5","_React$useState6","keyboardShown","setKeyboardShown","_React$useState7","Value","_React$useState8","visible","routes","useEffect","timing","toValue","duration","start","handleOrientationChange","_ref2","window","handleKeyboardShow","handleKeyboardHide","_ref3","finished","addEventListener","addListener","removeEventListener","removeListener","handleLayout","e","_e$nativeEvent$layout","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","createElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","pointerEvents","content","onLayout","map","route","index","focused","options","key","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","_objectSpread","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","concat","Provider","value","horizontal","testID","tabBarTestID","button","tabBarButton","icon","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"sources":["C:\\Users\\hibab\\Downloads\\aina19\\pingaina\\node_modules\\@react-navigation\\bottom-tabs\\lib\\module\\views\\BottomTabBar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  safeAreaInsets,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n\n  const [dimensions, setDimensions] = React.useState(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n  const [keyboardShown, setKeyboardShown] = React.useState(false);\n\n  const [visible] = React.useState(() => new Animated.Value(1));\n\n  const { routes } = state;\n\n  React.useEffect(() => {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    const handleKeyboardShow = () => setKeyboardShown(true);\n\n    const handleKeyboardHide = () =>\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        keyboardHidesTabBar\n          ? {\n              // When the keyboard is shown, slide down the tab bar\n              transform: [\n                {\n                  translateY: visible.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the tab bar so that the content is below it\n              // This is needed to avoid gap at bottom when the tab bar is hidden\n              position: keyboardShown ? 'absolute' : null,\n            }\n          : null,\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showIcon={showIcon}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}