{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hibab\\\\Downloads\\\\aina19\\\\pingaina\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { AppLoading } from 'expo';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RootNavigator from \"./src/navigation/RootNavigator\";\nimport { cacheResources } from \"./src/helpers/assets\";\nimport { StoreSubscriber, useAuthStore } from \"./src/store/store\";\nimport colors from \"./src/styles/colors\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isReady = _useState2[0],\n    setIsReady = _useState2[1];\n  var _useAuthStore = useAuthStore(),\n    _useAuthStore2 = _slicedToArray(_useAuthStore, 2),\n    userSession = _useAuthStore2[0],\n    actions = _useAuthStore2[1];\n  Text.defaultProps = Text.defaultProps || {};\n  Text.defaultProps.allowFontScaling = false;\n  useEffect(function () {\n    if (userSession.user === null || userSession.token === null) {\n      actions.getUserSession();\n    }\n  }, []);\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: cacheResources,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: console.warn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(StoreSubscriber, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var auth = _ref.auth,\n      isLoading = _ref.isLoading;\n    return isLoading ? React.createElement(View, {\n      style: styles.loadingContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      animating: isLoading,\n      color: colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    })) : React.createElement(RootNavigator, {\n      isUserSignin: auth.token !== null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }));\n};\nexport default App;\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","AppLoading","ActivityIndicator","StatusBar","StyleSheet","Text","View","RootNavigator","cacheResources","StoreSubscriber","useAuthStore","colors","App","_useState","_useState2","_slicedToArray","isReady","setIsReady","_useAuthStore","_useAuthStore2","userSession","actions","defaultProps","allowFontScaling","user","token","getUserSession","createElement","startAsync","onFinish","onError","console","warn","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","barStyle","_ref","auth","isLoading","style","styles","loadingContainer","animating","color","primary","isUserSignin","create","flex","justifyContent","alignItems"],"sources":["C:/Users/hibab/Downloads/aina19/pingaina/App.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { AppLoading } from 'expo';\r\nimport {\r\n  ActivityIndicator,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from 'react-native';\r\n\r\nimport RootNavigator from '@navigation/RootNavigator';\r\nimport { cacheResources } from '@helpers/assets';\r\nimport { StoreSubscriber, useAuthStore } from '@store/store';\r\n\r\nimport colors from '@styles/colors';\r\n\r\nconst App: React.FC = () => {\r\n  const [isReady, setIsReady] = useState<boolean>(false);\r\n  const [userSession, actions] = useAuthStore();\r\n\r\n  // Ignore dynamic scaling on iOS\r\n  // @ts-ignore\r\n  Text.defaultProps = Text.defaultProps || {};\r\n  // @ts-ignore\r\n  Text.defaultProps.allowFontScaling = false;\r\n\r\n  useEffect(() => {\r\n    if (userSession.user === null || userSession.token === null) {\r\n      actions.getUserSession();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={cacheResources}\r\n        onFinish={(): void => setIsReady(true)}\r\n        onError={console.warn}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"dark-content\" />\r\n      <StoreSubscriber>\r\n        {({ auth, isLoading }): ReactElement => {\r\n          return isLoading ? (\r\n            <View style={styles.loadingContainer}>\r\n              <ActivityIndicator animating={isLoading} color={colors.primary} />\r\n            </View>\r\n          ) : (\r\n            <RootNavigator isUserSignin={auth.token !== null} />\r\n          );\r\n        }}\r\n      </StoreSubscriber>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}