{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\components\\\\molecules\\\\DropDownMenu.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport BoxPathologie from \"../atoms/BoxPathologie\";\nvar DropDownMenu = function DropDownMenu(_ref) {\n  var objets = _ref.objets,\n    objets2 = _ref.objets2,\n    ischeckeable = _ref.ischeckeable;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, objets2 ? objets.map(function (objet, index) {\n    return React.createElement(BoxPathologie, {\n      key: index,\n      objet: objet,\n      objets: objets2,\n      ischeckeable: ischeckeable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    });\n  }) : objets.map(function (objet, index) {\n    return React.createElement(BoxPathologie, {\n      key: index,\n      objet: objet,\n      ischeckeable: ischeckeable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    });\n  }));\n};\nexport default DropDownMenu;","map":{"version":3,"names":["React","View","BoxPathologie","DropDownMenu","_ref","objets","objets2","ischeckeable","createElement","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","objet","index","key"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/components/molecules/DropDownMenu.tsx"],"sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport BoxPathologie from '../atoms/BoxPathologie'\n\ntype Symptome = {\n    nom: string\n}\n\ntype Pathologie = {\n    nom: string\n}\n\ntype Props = {\n  objets: Pathologie[]|Symptome[];\n  objets2?: Pathologie[]|Symptome[];\n  ischeckeable : boolean;\n};\n\nconst DropDownMenu = ({ objets, objets2,ischeckeable }: Props) => {\n    \n    return (\n        <View>\n            {objets2 ? (objets.map((objet, index) => (\n                <BoxPathologie key={index} objet={objet} objets={objets2} ischeckeable={ischeckeable} />\n            ))): \n            (objets.map((objet, index) => (\n                <BoxPathologie key={index} objet={objet} ischeckeable={ischeckeable} />\n            )))\n            }\n        \n        </View>\n    );\n};\n\nexport default DropDownMenu;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAE1B,OAAOC,aAAa;AAgBpB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAgD;EAAA,IAA1CC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAACC,YAAY,GAAAH,IAAA,CAAZG,YAAY;EAEhD,OACIP,KAAA,CAAAQ,aAAA,CAACP,IAAI;IAAAQ,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACAP,OAAO,GAAID,MAAM,CAACS,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAA,OAChChB,KAAA,CAAAQ,aAAA,CAACN,aAAa;MAACe,GAAG,EAAED,KAAM;MAACD,KAAK,EAAEA,KAAM;MAACV,MAAM,EAAEC,OAAQ;MAACC,YAAY,EAAEA,YAAa;MAAAE,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAAA,CAC3F,CAAC,GACDR,MAAM,CAACS,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAA,OACrBhB,KAAA,CAAAQ,aAAA,CAACN,aAAa;MAACe,GAAG,EAAED,KAAM;MAACD,KAAK,EAAEA,KAAM;MAACR,YAAY,EAAEA,YAAa;MAAAE,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EAAA,CAC1E,CAGC,CAAC;AAEf,CAAC;AAED,eAAeV,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}