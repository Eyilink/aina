{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport UAParser from 'ua-parser-js';\nimport { DeviceType } from \"./Device.types\";\nvar result = null;\nif (canUseDOM) {\n  var parser = new UAParser(window.navigator.userAgent);\n  result = parser.getResult();\n}\nexport default {\n  get isDevice() {\n    return true;\n  },\n  get brand() {\n    return null;\n  },\n  get manufacturer() {\n    return result && result.device.vendor || null;\n  },\n  get modelName() {\n    return result && result.device.model || null;\n  },\n  get deviceYearClass() {\n    return null;\n  },\n  get totalMemory() {\n    return null;\n  },\n  get supportedCpuArchitectures() {\n    return result && result.cpu.architecture ? [result.cpu.architecture] : null;\n  },\n  get osName() {\n    return result && result.os.name || '';\n  },\n  get osVersion() {\n    return result && result.os.version || '';\n  },\n  get osBuildId() {\n    return null;\n  },\n  get osInternalBuildId() {\n    return null;\n  },\n  get deviceName() {\n    return null;\n  },\n  getDeviceTypeAsync: function getDeviceTypeAsync() {\n    return _regeneratorRuntime.async(function getDeviceTypeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = result.device.type;\n            _context.next = _context.t0 === 'mobile' ? 3 : _context.t0 === 'tablet' ? 4 : _context.t0 === 'smarttv' ? 5 : _context.t0 === 'console' ? 6 : _context.t0 === 'embedded' ? 6 : _context.t0 === 'wearable' ? 6 : 7;\n            break;\n          case 3:\n            return _context.abrupt(\"return\", DeviceType.PHONE);\n          case 4:\n            return _context.abrupt(\"return\", DeviceType.TABLET);\n          case 5:\n            return _context.abrupt(\"return\", DeviceType.TV);\n          case 6:\n            return _context.abrupt(\"return\", DeviceType.UNKNOWN);\n          case 7:\n            return _context.abrupt(\"return\", DeviceType.DESKTOP);\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  isRootedExperimentalAsync: function isRootedExperimentalAsync() {\n    return _regeneratorRuntime.async(function isRootedExperimentalAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", false);\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["canUseDOM","UAParser","DeviceType","result","parser","window","navigator","userAgent","getResult","isDevice","brand","manufacturer","device","vendor","modelName","model","deviceYearClass","totalMemory","supportedCpuArchitectures","cpu","architecture","osName","os","name","osVersion","version","osBuildId","osInternalBuildId","deviceName","getDeviceTypeAsync","_regeneratorRuntime","async","getDeviceTypeAsync$","_context","prev","next","t0","type","abrupt","PHONE","TABLET","TV","UNKNOWN","DESKTOP","stop","Promise","isRootedExperimentalAsync","isRootedExperimentalAsync$","_context2"],"sources":["C:\\Users\\HP\\Documents\\Ping\\pingaina\\node_modules\\expo-device\\src\\ExpoDevice.web.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport UAParser from 'ua-parser-js';\n\nimport { DeviceType } from './Device.types';\n\nlet result: any = null;\nif (canUseDOM) {\n  const parser = new UAParser(window.navigator.userAgent);\n  result = parser.getResult();\n}\n\nexport default {\n  get isDevice(): boolean {\n    return true;\n  },\n  get brand(): null {\n    return null;\n  },\n  get manufacturer(): null {\n    return (result && result.device.vendor) || null;\n  },\n  get modelName(): string | null {\n    return (result && result.device.model) || null;\n  },\n  get deviceYearClass(): null {\n    return null;\n  },\n  get totalMemory(): null {\n    return null;\n  },\n  get supportedCpuArchitectures(): string[] | null {\n    return result && result.cpu.architecture ? [result.cpu.architecture] : null;\n  },\n  get osName(): string {\n    return (result && result.os.name) || '';\n  },\n  get osVersion(): string {\n    return (result && result.os.version) || '';\n  },\n  get osBuildId(): null {\n    return null;\n  },\n  get osInternalBuildId(): null {\n    return null;\n  },\n  get deviceName(): null {\n    return null;\n  },\n  async getDeviceTypeAsync(): Promise<DeviceType> {\n    switch (result.device.type) {\n      case 'mobile':\n        return DeviceType.PHONE;\n      case 'tablet':\n        return DeviceType.TABLET;\n      case 'smarttv':\n        return DeviceType.TV;\n      case 'console':\n      case 'embedded':\n      case 'wearable':\n        return DeviceType.UNKNOWN;\n      default:\n        return DeviceType.DESKTOP;\n    }\n  },\n  async isRootedExperimentalAsync(): Promise<boolean> {\n    return false;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}