{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\Evaluate.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"../../components/molecules/Container\";\nimport DropDownMenu from \"../../components/molecules/DropDownMenu\";\nimport { useReportsStore } from \"../../store/store\";\nimport { hasPreviousReportToday } from \"../../helpers/utils\";\nimport layout from \"../../styles/layout\";\nimport fonts from \"../../styles/fonts\";\nimport { MALADIE1 } from \"../../constants/constants\";\nimport AddBoutton from \"../../components/atoms/AddBoutton\";\nvar Evaluate = function Evaluate(_ref) {\n  var ButtonClicked = _ref.ButtonClicked;\n  var _useReportsStore = useReportsStore({\n      disease: MALADIE1\n    }),\n    _useReportsStore2 = _slicedToArray(_useReportsStore, 1),\n    reports = _useReportsStore2[0];\n  var isNewReportOfDay = !reports || !hasPreviousReportToday(reports);\n  var pathologies = [{\n    nom: 'COVID-19'\n  }, {\n    nom: 'Grippe'\n  }, {\n    nom: 'Rhume'\n  }];\n  var symptome = [{\n    nom: 'toux'\n  }, {\n    nom: 'temperature'\n  }];\n  return React.createElement(Container, {\n    noMarginBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(DropDownMenu, {\n    objets: pathologies,\n    objets2: symptome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(AddBoutton, {\n    onPress: handlePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })));\n};\nvar handlePress = function handlePress() {};\nexport default Evaluate;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: layout.padding\n  },\n  subtitle: {\n    marginTop: layout.padding * 2,\n    fontSize: fonts.sections.fontSize,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","Container","DropDownMenu","useReportsStore","hasPreviousReportToday","layout","fonts","MALADIE1","AddBoutton","Evaluate","_ref","ButtonClicked","_useReportsStore","disease","_useReportsStore2","_slicedToArray","reports","isNewReportOfDay","pathologies","nom","symptome","createElement","noMarginBottom","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","objets","objets2","onPress","handlePress","create","flex","paddingVertical","padding","subtitle","marginTop","fontSize","sections","textAlign"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/screens/Authenticated/Evaluate.tsx"],"sourcesContent":["import React, { ReactElement , useState } from 'react';\r\nimport { Alert, StyleSheet, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n\r\nimport Container from '@components/molecules/Container';\r\nimport DropDownMenu from '@components/molecules/DropDownMenu';\r\n\r\nimport { useReportsStore } from '@store/store';\r\nimport { AuthenticatedStackParamList } from '@navigation/types';\r\nimport { hasPreviousReportToday } from '@helpers/utils';\r\n\r\nimport layout from '@styles/layout';\r\nimport fonts from '@styles/fonts';\r\nimport i18n from '@i18n/i18n';\r\nimport { DATE_TODAY, MALADIE1 } from '@constants/constants';\r\n\r\nimport AddBoutton from '@components/atoms/AddBoutton';\r\n\r\n\r\ntype Pathologie = {\r\n  nom: string\r\n}\r\n\r\ntype Symptome = {\r\n  nom: string\r\n}\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<AuthenticatedStackParamList, 'Temperature'>;\r\n  ButtonClicked : boolean ;\r\n};\r\n\r\nconst Evaluate = ({ ButtonClicked }: Props): ReactElement => {\r\n  const [reports] = useReportsStore({ disease: MALADIE1 });\r\n  const isNewReportOfDay = !reports || !hasPreviousReportToday(reports);\r\n  \r\n  // Exemple :\r\n  const pathologies: Pathologie[] = [\r\n    { nom: 'COVID-19' },\r\n    { nom: 'Grippe' },\r\n    { nom: 'Rhume' },\r\n  ];\r\n  const symptome: Symptome[] = [\r\n    { nom: 'toux' },\r\n    { nom: 'temperature' },\r\n  ];\r\n\r\n  // const onStartReport = (): void => {\r\n  //   if (!isNewReportOfDay) {\r\n  //     Alert.alert(\r\n  //       i18n.t('commons.attention'),\r\n  //       i18n.t('evaluate.erase'),\r\n  //       [\r\n  //         { text: i18n.t('commons.errors.cancel'), style: 'cancel' },\r\n  //         {\r\n  //           text: i18n.t('commons.errors.ok'),\r\n  //           onPress: (): void => navigation.navigate('Temperature'),\r\n  //         },\r\n  //       ],\r\n  //       { cancelable: false },\r\n  //     );\r\n  //   } else navigation.navigate('Temperature');\r\n  // };\r\n\r\n  return (\r\n    <Container noMarginBottom>\r\n      <View style={styles.container}>\r\n        {/* <Title isPrimary isDate isCenter text={DATE_TODAY} />\r\n        {!isNewReportOfDay ? (\r\n          <SubTitle text={i18n.t('evaluate.restart')} style={styles.subtitle} />\r\n        ) : (\r\n          <SubTitle text={i18n.t('evaluate.start')} style={styles.subtitle} />\r\n        )}\r\n        <Button\r\n          text={i18n.t('commons.validate')}\r\n          onPress={onStartReport}\r\n          isValidate\r\n          stretch\r\n        /> */}\r\n        \r\n      <DropDownMenu objets={pathologies} objets2={symptome} />\r\n      <AddBoutton onPress={handlePress}></AddBoutton>\r\n      \r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst handlePress = () => {\r\n  //     // Fonction vide qui s'active lorsque vous cliquez sur le bouton\r\n  //     // Vous pouvez ajouter votre logique ou vos actions ici\r\n};\r\n\r\nexport default Evaluate\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingVertical: layout.padding,\r\n  },\r\n  subtitle: {\r\n    marginTop: layout.padding * 2,\r\n    fontSize: fonts.sections.fontSize,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAmC,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAIvD,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAEnB,SAASC,eAAe;AAExB,SAASC,sBAAsB;AAE/B,OAAOC,MAAM;AACb,OAAOC,KAAK;AAEZ,SAAqBC,QAAQ;AAE7B,OAAOC,UAAU;AAgBjB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA+C;EAAA,IAAzCC,aAAa,GAAAD,IAAA,CAAbC,aAAa;EAAA,IAAAC,gBAAA,GACbT,eAAe,CAAC;MAAEU,OAAO,EAAEN;IAAS,CAAC,CAAC;IAAAO,iBAAA,GAAAC,cAAA,CAAAH,gBAAA;IAAjDI,OAAO,GAAAF,iBAAA;EACd,IAAMG,gBAAgB,GAAG,CAACD,OAAO,IAAI,CAACZ,sBAAsB,CAACY,OAAO,CAAC;EAGrE,IAAME,WAAyB,GAAG,CAChC;IAAEC,GAAG,EAAE;EAAW,CAAC,EACnB;IAAEA,GAAG,EAAE;EAAS,CAAC,EACjB;IAAEA,GAAG,EAAE;EAAQ,CAAC,CACjB;EACD,IAAMC,QAAoB,GAAG,CAC3B;IAAED,GAAG,EAAE;EAAO,CAAC,EACf;IAAEA,GAAG,EAAE;EAAc,CAAC,CACvB;EAmBD,OACErB,KAAA,CAAAuB,aAAA,CAACpB,SAAS;IAACqB,cAAc;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvB7B,KAAA,CAAAuB,aAAA,CAACrB,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAP,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAc9B7B,KAAA,CAAAuB,aAAA,CAACnB,YAAY;IAAC6B,MAAM,EAAEb,WAAY;IAACc,OAAO,EAAEZ,QAAS;IAAAG,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACxD7B,KAAA,CAAAuB,aAAA,CAACb,UAAU;IAACyB,OAAO,EAAEC,WAAY;IAAAX,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAa,CAExC,CACG,CAAC;AAEhB,CAAC;AAED,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS,CAG1B,CAAC;AAED,eAAezB,QAAQ;AAEvB,IAAMoB,MAAM,GAAG9B,UAAU,CAACoC,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,eAAe,EAAEhC,MAAM,CAACiC;EAC1B,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEnC,MAAM,CAACiC,OAAO,GAAG,CAAC;IAC7BG,QAAQ,EAAEnC,KAAK,CAACoC,QAAQ,CAACD,QAAQ;IACjCE,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}