{"ast":null,"code":"import * as React from 'react';\nvar NavigationBuilderContext = React.createContext({\n  trackAction: function trackAction() {\n    return undefined;\n  }\n});\nexport default NavigationBuilderContext;","map":{"version":3,"names":["React","NavigationBuilderContext","createContext","trackAction","undefined"],"sources":["C:\\Users\\hibab\\Downloads\\aina19\\pingaina\\node_modules\\@react-navigation\\core\\lib\\module\\NavigationBuilderContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/routers';\nimport { NavigationHelpers } from './types';\n\nexport type ChildActionListener = (\n  action: NavigationAction,\n  visitedNavigators?: Set<string>\n) => boolean;\n\nexport type FocusedNavigationCallback<T> = (\n  navigation: NavigationHelpers<ParamListBase>\n) => T;\n\nexport type FocusedNavigationListener = <T>(\n  callback: FocusedNavigationCallback<T>\n) => { handled: boolean; result: T };\n\nexport type NavigatorStateGetter = () => NavigationState;\n\n/**\n * Context which holds the required helpers needed to build nested navigators.\n */\nconst NavigationBuilderContext = React.createContext<{\n  onAction?: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  addActionListener?: (listener: ChildActionListener) => void;\n  addFocusedListener?: (listener: FocusedNavigationListener) => void;\n  onRouteFocus?: (key: string) => void;\n  addStateGetter?: (key: string, getter: NavigatorStateGetter) => void;\n  trackAction: (action: NavigationAction) => void;\n}>({\n  trackAction: () => undefined,\n});\n\nexport default NavigationBuilderContext;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AA0BA,IAAMC,wBAAwB,GAAGD,KAAK,CAACE,aAAN,CAU9B;EACDC,WAAW,EAAE,SAAAA,YAAA;IAAA,OAAMC,SAAA;EAAA;AADlB,CAV8B,CAAjC;AAcA,eAAeH,wBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}