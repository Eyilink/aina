{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hibab\\\\Downloads\\\\aina19\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\Home.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Notifications } from 'expo';\nimport Container from \"../../components/molecules/Container\";\nimport Title from \"../../components/atoms/Title\";\nimport SubTitle from \"../../components/atoms/SubTitle\";\nimport Button from \"../../components/atoms/Button\";\nimport EmojiGreen from \"../../assets/images/green-emoji.png\";\nimport EmojiOrange from \"../../assets/images/orange-emoji.png\";\nimport EmojiRed from \"../../assets/images/red-emoji.png\";\nimport { registerForPushNotificationsAsync } from \"../../helpers/notifications\";\nimport { useReportsStore } from \"../../store/store\";\nimport i18n from \"../../i18n/i18n\";\nimport fonts from \"../../styles/fonts\";\nimport layout from \"../../styles/layout\";\nimport { DATE_TODAY, MALADIE1 } from \"../../constants/constants\";\nimport { getRecommandation } from \"../../helpers/utils\";\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textReco = _useState4[0],\n    setTextReco = _useState4[1];\n  var _useReportsStore = useReportsStore({\n      disease: MALADIE1\n    }),\n    _useReportsStore2 = _slicedToArray(_useReportsStore, 1),\n    reports = _useReportsStore2[0];\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n    Notifications.addListener(handleNotification);\n  }, []);\n  useEffect(function () {\n    if (reports) {\n      var recommandation = getRecommandation(reports);\n      switch (recommandation) {\n        case 'end1':\n          setImage(EmojiGreen);\n          setTextReco(i18n.t('home.end1'));\n          break;\n        case 'end2':\n          setImage(EmojiOrange);\n          setTextReco(i18n.t('home.end2'));\n          break;\n        case 'end2bis':\n          setImage(EmojiOrange);\n          setTextReco(i18n.t('home.end2bis'));\n          break;\n        case 'end3':\n          setImage(EmojiRed);\n          setTextReco(i18n.t('home.end3'));\n          break;\n      }\n    }\n  }, [reports]);\n  var handleNotification = function handleNotification(notification) {\n    var origin = notification.origin;\n    if (origin === 'selected') navigation.navigate('Evaluate');\n  };\n  return React.createElement(Container, {\n    noMarginBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    isPrimary: true,\n    isDate: true,\n    isCenter: true,\n    text: DATE_TODAY,\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), !reports ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(SubTitle, {\n    text: i18n.t('home.firstTime'),\n    style: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: i18n.t('navigation.authenticated.evaluate'),\n    onPress: function onPress() {\n      return navigation.navigate('Evaluate');\n    },\n    isValidate: true,\n    stretch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })) : React.createElement(ScrollView, {\n    contentContainerStyle: styles.recommandationContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), React.createElement(SubTitle, {\n    text: textReco,\n    style: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: layout.padding\n  },\n  title: {\n    paddingBottom: layout.padding / 2\n  },\n  subtitle: {\n    marginTop: layout.padding,\n    textAlign: 'center',\n    fontSize: fonts.subtitle.fontSize - 1\n  },\n  recommandationContainer: {\n    alignItems: 'center'\n  },\n  image: {\n    marginTop: layout.padding / 2,\n    width: 120,\n    height: 120\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Image","ScrollView","StyleSheet","View","Notifications","Container","Title","SubTitle","Button","EmojiGreen","EmojiOrange","EmojiRed","registerForPushNotificationsAsync","useReportsStore","i18n","fonts","layout","DATE_TODAY","MALADIE1","getRecommandation","Home","_ref","navigation","_useState","_useState2","_slicedToArray","image","setImage","_useState3","_useState4","textReco","setTextReco","_useReportsStore","disease","_useReportsStore2","reports","addListener","handleNotification","recommandation","t","notification","origin","navigate","createElement","noMarginBottom","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","isPrimary","isDate","isCenter","text","title","subtitle","onPress","isValidate","stretch","contentContainerStyle","recommandationContainer","source","create","flex","paddingTop","padding","paddingBottom","marginTop","textAlign","fontSize","alignItems","width","height"],"sources":["C:/Users/hibab/Downloads/aina19/pingaina/src/screens/Authenticated/Home.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\nimport {\r\n  Image,\r\n  ImageSourcePropType,\r\n  ScrollView,\r\n  StyleSheet,\r\n  View,\r\n} from 'react-native';\r\nimport { Notifications } from 'expo';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport SubTitle from '@components/atoms/SubTitle';\r\nimport Button from '@components/atoms/Button';\r\n\r\nimport EmojiGreen from '@assets/images/green-emoji.png';\r\nimport EmojiOrange from '@assets/images/orange-emoji.png';\r\nimport EmojiRed from '@assets/images/red-emoji.png';\r\n\r\nimport { registerForPushNotificationsAsync } from '@helpers/notifications';\r\nimport { BottomTabParamList } from '@navigation/types';\r\nimport { useReportsStore } from '@store/store';\r\n\r\nimport i18n from '@i18n/i18n';\r\nimport fonts from '@styles/fonts';\r\nimport layout from '@styles/layout';\r\nimport { DATE_TODAY, MALADIE1 } from '@constants/constants';\r\nimport { getRecommandation } from '@helpers/utils';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<BottomTabParamList, 'Home'>;\r\n};\r\n\r\ntype Notification = {\r\n  origin: 'selected' | 'received' | 'selected';\r\n  data: object;\r\n  remote: boolean;\r\n};\r\n\r\nconst Home = ({ navigation }: Props): ReactElement => {\r\n  const [image, setImage] = useState<ImageSourcePropType>({});\r\n  const [textReco, setTextReco] = useState<string>('');\r\n  const [reports] = useReportsStore({ disease: MALADIE1 });\r\n\r\n  useEffect(() => {\r\n    registerForPushNotificationsAsync();\r\n    Notifications.addListener(handleNotification);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (reports) {\r\n      const recommandation = getRecommandation(reports);\r\n      switch (recommandation) {\r\n        case 'end1':\r\n          setImage(EmojiGreen);\r\n          setTextReco(i18n.t('home.end1'));\r\n          break;\r\n        case 'end2':\r\n          setImage(EmojiOrange);\r\n          setTextReco(i18n.t('home.end2'));\r\n          break;\r\n        case 'end2bis':\r\n          setImage(EmojiOrange);\r\n          setTextReco(i18n.t('home.end2bis'));\r\n          break;\r\n        case 'end3':\r\n          setImage(EmojiRed);\r\n          setTextReco(i18n.t('home.end3'));\r\n          break;\r\n      }\r\n    }\r\n  }, [reports]);\r\n\r\n  const handleNotification = (notification: Notification): void => {\r\n    const { origin } = notification;\r\n    if (origin === 'selected') navigation.navigate('Evaluate');\r\n  };\r\n\r\n  return (\r\n    <Container noMarginBottom>\r\n      <View style={styles.container}>\r\n        <Title\r\n          isPrimary\r\n          isDate\r\n          isCenter\r\n          text={DATE_TODAY}\r\n          style={styles.title}\r\n        />\r\n        {!reports ? (\r\n          <View>\r\n            <SubTitle text={i18n.t('home.firstTime')} style={styles.subtitle} />\r\n            <Button\r\n              text={i18n.t('navigation.authenticated.evaluate')}\r\n              onPress={(): void => navigation.navigate('Evaluate')}\r\n              isValidate\r\n              stretch\r\n            />\r\n          </View>\r\n        ) : (\r\n          <ScrollView contentContainerStyle={styles.recommandationContainer}>\r\n            <Image style={styles.image} source={image} />\r\n            <SubTitle text={textReco} style={styles.subtitle} />\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: layout.padding,\r\n  },\r\n  title: {\r\n    paddingBottom: layout.padding / 2,\r\n  },\r\n  subtitle: {\r\n    marginTop: layout.padding,\r\n    textAlign: 'center',\r\n    fontSize: fonts.subtitle.fontSize - 1,\r\n  },\r\n  recommandationContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    marginTop: layout.padding / 2,\r\n    width: 120,\r\n    height: 120,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}