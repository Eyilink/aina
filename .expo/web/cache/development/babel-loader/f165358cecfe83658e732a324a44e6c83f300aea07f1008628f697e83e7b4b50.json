{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\History.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"../../components/molecules/Container\";\nimport { useReportsStore } from \"../../store/store\";\nimport layout from \"../../styles/layout\";\nimport fonts from \"../../styles/fonts\";\nimport { MALADIE1 } from \"../../constants/constants\";\nvar History = function History(_ref) {\n  var navigation = _ref.navigation;\n  var _useReportsStore = useReportsStore({\n      disease: MALADIE1\n    }),\n    _useReportsStore2 = _slicedToArray(_useReportsStore, 1),\n    reports = _useReportsStore2[0];\n  var _useState = useState('list'),\n    _useState2 = _slicedToArray(_useState, 2),\n    reportType = _useState2[0],\n    setReportType = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isChartFocused = _useState4[0],\n    setIsChartFocused = _useState4[1];\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      setIsChartFocused(true);\n    });\n    return unsubscribe;\n  }, [navigation]);\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('blur', function () {\n      setIsChartFocused(false);\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var onPressList = function onPressList() {\n    setIsChartFocused(false);\n    setReportType('list');\n  };\n  var onPressChart = function onPressChart() {\n    setIsChartFocused(true);\n    setReportType('chart');\n  };\n  return React.createElement(Container, {\n    noMarginBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\nexport default History;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: layout.padding\n  },\n  subtitle: {\n    marginTop: layout.padding,\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    marginHorizontal: layout.padding\n  },\n  button: {\n    flex: 1,\n    paddingHorizontal: layout.padding,\n    paddingVertical: layout.padding / 6,\n    marginBottom: layout.padding,\n    alignItems: 'center'\n  },\n  buttonList: {\n    borderTopLeftRadius: layout.buttons.borderRadius,\n    borderBottomLeftRadius: layout.buttons.borderRadius\n  },\n  buttonCharts: {\n    borderTopRightRadius: layout.buttons.borderRadius,\n    borderBottomRightRadius: layout.buttons.borderRadius\n  },\n  textButtons: {\n    textAlign: 'center',\n    fontFamily: fonts.label.fontFamily,\n    fontSize: fonts.label.fontSize,\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Container","useReportsStore","layout","fonts","MALADIE1","History","_ref","navigation","_useReportsStore","disease","_useReportsStore2","_slicedToArray","reports","_useState","_useState2","reportType","setReportType","_useState3","_useState4","isChartFocused","setIsChartFocused","unsubscribe","addListener","onPressList","onPressChart","createElement","noMarginBottom","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","create","flex","paddingTop","padding","subtitle","marginTop","textAlign","buttonsContainer","flexDirection","marginHorizontal","button","paddingHorizontal","paddingVertical","marginBottom","alignItems","buttonList","borderTopLeftRadius","buttons","borderRadius","borderBottomLeftRadius","buttonCharts","borderTopRightRadius","borderBottomRightRadius","textButtons","fontFamily","label","fontSize"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/screens/Authenticated/History.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport HistoryTimeline from '@components/molecules/HistoryTimeline';\r\nimport HistoryCharts from '@components/molecules/HistoryCharts';\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport Subtitle from '@components/atoms/SubTitle';\r\nimport Button from '@components/atoms/Button';\r\n\r\nimport { BottomTabParamList } from '@navigation/types';\r\nimport { useReportsStore } from '@store/store';\r\n\r\nimport layout from '@styles/layout';\r\nimport i18n from '@i18n/i18n';\r\nimport fonts from '@styles/fonts';\r\nimport colors from '@styles/colors';\r\nimport { MALADIE1 } from '@constants/constants';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<BottomTabParamList, 'History'>;\r\n};\r\n\r\nconst History = ({ navigation }: Props): ReactElement => {\r\n  const [reports] = useReportsStore({ disease: MALADIE1 });\r\n  const [reportType, setReportType] = useState<string>('list');\r\n  const [isChartFocused, setIsChartFocused] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      setIsChartFocused(true);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('blur', () => {\r\n      setIsChartFocused(false);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  const onPressList = (): void => {\r\n    setIsChartFocused(false);\r\n    setReportType('list');\r\n  };\r\n\r\n  const onPressChart = (): void => {\r\n    setIsChartFocused(true);\r\n    setReportType('chart');\r\n  };\r\n\r\n  return (\r\n    <Container noMarginBottom>\r\n      <View style={styles.container}>\r\n        {/* <Title isPrimary text={i18n.t('navigation.authenticated.history')} />\r\n        {!reports ? (\r\n          <>\r\n            <Subtitle\r\n              text={i18n.t('history.firstTime')}\r\n              style={styles.subtitle}\r\n            />\r\n            <Button\r\n              text={i18n.t('navigation.authenticated.evaluate')}\r\n              onPress={(): void => navigation.navigate('Evaluate')}\r\n              isValidate\r\n              stretch\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <View style={styles.buttonsContainer}>\r\n              <TouchableOpacity\r\n                onPress={onPressList}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonList,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'list' ? colors.primary : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"list\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'list' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'list' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.list')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={onPressChart}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonCharts,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'chart'\r\n                        ? colors.primary\r\n                        : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"bar-chart-2\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'chart' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'chart' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.chart')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {reportType === 'list' ? (\r\n              <HistoryTimeline reports={reports} />\r\n            ) : (\r\n              <ScrollView persistentScrollbar>\r\n                <HistoryCharts reports={reports} isFocused={isChartFocused} />\r\n              </ScrollView>\r\n            )}\r\n          </>\r\n        )} */}\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: layout.padding,\r\n  },\r\n  subtitle: {\r\n    marginTop: layout.padding,\r\n    textAlign: 'center',\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: layout.padding,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    paddingHorizontal: layout.padding,\r\n    paddingVertical: layout.padding / 6,\r\n    marginBottom: layout.padding,\r\n    alignItems: 'center',\r\n  },\r\n  buttonList: {\r\n    borderTopLeftRadius: layout.buttons.borderRadius,\r\n    borderBottomLeftRadius: layout.buttons.borderRadius,\r\n  },\r\n  buttonCharts: {\r\n    borderTopRightRadius: layout.buttons.borderRadius,\r\n    borderBottomRightRadius: layout.buttons.borderRadius,\r\n  },\r\n  textButtons: {\r\n    textAlign: 'center',\r\n    fontFamily: fonts.label.fontFamily,\r\n    fontSize: fonts.label.fontSize,\r\n    marginTop: 4,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}