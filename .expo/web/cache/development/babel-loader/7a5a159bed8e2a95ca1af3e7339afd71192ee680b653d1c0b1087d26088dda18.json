{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\components\\\\atoms\\\\BoxPathologie.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from '@expo/vector-icons';\nimport AppText from \"./AppText\";\nimport DropDownMenu from \"../molecules/DropDownMenu\";\nimport fonts from \"../../styles/fonts\";\nimport colors from \"../../styles/colors\";\nimport layout from \"../../styles/layout\";\nvar BoxPathologie = function BoxPathologie(_ref) {\n  var objet = _ref.objet,\n    objets = _ref.objets,\n    ischeckeable = _ref.ischeckeable;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checked = _React$useState4[0],\n    setChecked = _React$useState4[1];\n  var onPress = function onPress() {\n    setOpen(!open);\n    setChecked(!checked);\n  };\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      alignSelf: 'stretch',\n      marginVertical: layout.padding / 2\n    }],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, ischeckeable ? React.createElement(React.Fragment, null, checked ? React.createElement(React.Fragment, null, React.createElement(AntDesign, {\n    name: \"check\",\n    size: 22,\n    color: '#fc327b',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    text: objet.nom,\n    style: styles.textClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })) : React.createElement(AppText, {\n    text: objet.nom,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })) : React.createElement(AppText, {\n    text: objet.nom,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), objets && open ? React.createElement(DropDownMenu, {\n    objets: objets,\n    ischeckeable: ischeckeable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }\n  }) : null));\n};\nexport default BoxPathologie;\nvar styles = StyleSheet.create({\n  subtitle: {\n    fontSize: fonts.subtitle.fontSize,\n    color: colors.black,\n    marginBottom: layout.padding,\n    lineHeight: fonts.subtitle.fontSize + 3,\n    marginHorizontal: layout.padding\n  },\n  button: {\n    borderRadius: layout.buttons.borderRadius,\n    marginHorizontal: layout.padding\n  },\n  textClick: {\n    marginLeft: 3,\n    textAlign: 'center'\n  },\n  text: {\n    marginLeft: 25,\n    lineHeight: fonts.subtitle.fontSize + 3,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","View","AntDesign","AppText","DropDownMenu","fonts","colors","layout","BoxPathologie","_ref","objet","objets","ischeckeable","_React$useState","useState","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","checked","setChecked","onPress","createElement","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","button","alignSelf","marginVertical","padding","flexDirection","Fragment","name","size","color","text","nom","textClick","create","subtitle","fontSize","black","marginBottom","lineHeight","marginHorizontal","borderRadius","buttons","marginLeft","textAlign"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/components/atoms/BoxPathologie.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity} from 'react-native';\r\nimport { View } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport AppText from '@components/atoms/AppText';\r\nimport DropDownMenu from '@components/molecules/DropDownMenu'\r\n\r\n\r\n\r\nimport fonts from '@styles/fonts';\r\nimport colors from '@styles/colors';\r\nimport layout from '@styles/layout';\r\n\r\ntype Symptome = {\r\n  nom: string\r\n}\r\n\r\ntype Pathologie = {\r\n  nom: string\r\n}\r\n\r\ntype Props = {\r\n  objet: Symptome|Pathologie;\r\n  objets?: Symptome[]|Pathologie[];\r\n  ischeckeable : boolean;\r\n};\r\n\r\n\r\n\r\nconst BoxPathologie = ({ objet, objets, ischeckeable}: Props): ReactElement => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const onPress = (): void => {\r\n    setOpen(!open);\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.button,\r\n          {\r\n            alignSelf: 'stretch',\r\n            marginVertical: layout.padding/2,\r\n          },\r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n        <View  style={{flexDirection:'row'}}>\r\n          {ischeckeable?(<>\r\n          {checked ? (\r\n            <>\r\n            <AntDesign name=\"check\" size={22} color={'#fc327b'} />\r\n            <AppText \r\n              text={objet.nom}\r\n              style={styles.textClick}\r\n            />\r\n            </>\r\n            ) : (\r\n            <AppText \r\n              text={objet.nom}\r\n              style={styles.text}\r\n            />)}</>) : (<AppText \r\n              text={objet.nom}\r\n              style={styles.text}\r\n            />)\r\n            }\r\n          \r\n          \r\n        </View>\r\n        \r\n\r\n        {objets && open ? (<DropDownMenu objets={objets} ischeckeable= {ischeckeable}/>) : null}\r\n      </TouchableOpacity>\r\n    </View>\r\n\r\n  );\r\n};\r\n\r\nexport default BoxPathologie;\r\n\r\nconst styles = StyleSheet.create({\r\n  subtitle: {\r\n    fontSize: fonts.subtitle.fontSize,\r\n    color: colors.black,\r\n    marginBottom: layout.padding,\r\n    lineHeight: fonts.subtitle.fontSize + 3,\r\n    marginHorizontal: layout.padding\r\n  }, \r\n  button: {\r\n    borderRadius: layout.buttons.borderRadius,\r\n    marginHorizontal: layout.padding,\r\n  },\r\n  textClick: {\r\n    marginLeft: 3,\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n    marginLeft: 25,\r\n    lineHeight: fonts.subtitle.fontSize + 3,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}