{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport NavigationContext from \"./NavigationContext\";\nimport { PrivateValueStore } from \"./types\";\nPrivateValueStore;\nexport default function useNavigationHelpers(_ref) {\n  var onAction = _ref.onAction,\n    getState = _ref.getState,\n    emitter = _ref.emitter,\n    router = _ref.router;\n  var parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n      if (!handled && process.env.NODE_ENV !== 'production') {\n        var payload = action.payload;\n        var message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload === null || payload === void 0 ? void 0 : payload.name) {\n              message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n            } else {\n              message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n            }\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += \"\\n\\nIs there any screen to go back to?\";\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n            break;\n        }\n        message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n        console.error(message);\n      }\n    };\n    var actions = _objectSpread({}, router.actionCreators, {}, CommonActions);\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n      return acc;\n    }, {});\n    return _objectSpread({}, parentNavigationHelpers, {}, helpers, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      }\n    });\n  }, [router, getState, parentNavigationHelpers, emitter.emit, onAction]);\n}","map":{"version":3,"names":["React","CommonActions","NavigationContext","PrivateValueStore","useNavigationHelpers","_ref","onAction","getState","emitter","router","parentNavigationHelpers","useContext","useMemo","dispatch","op","action","handled","process","env","NODE_ENV","payload","message","concat","type","JSON","stringify","name","console","error","actions","_objectSpread","actionCreators","helpers","Object","keys","reduce","acc","apply","arguments","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList"],"sources":["C:\\Users\\HP\\Documents\\Ping\\pingaina\\node_modules\\@react-navigation\\core\\lib\\module\\useNavigationHelpers.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled && process.env.NODE_ENV !== 'production') {\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-ignore\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined);\n  }, [router, getState, parentNavigationHelpers, emitter.emit, onAction]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}