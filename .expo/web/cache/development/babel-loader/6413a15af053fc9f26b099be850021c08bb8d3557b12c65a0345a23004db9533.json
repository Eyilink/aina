{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\components\\\\atoms\\\\BoxHistorique.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppText from \"./AppText\";\nimport fonts from \"../../styles/fonts\";\nimport colors from \"../../styles/colors\";\nimport layout from \"../../styles/layout\";\nvar BoxPathologie = function BoxPathologie(_ref) {\n  var objet = _ref.objet;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checked = _React$useState4[0],\n    setChecked = _React$useState4[1];\n  var onPress = function onPress() {};\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      alignSelf: 'stretch',\n      marginVertical: layout.padding / 2\n    }],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(AppText, {\n    text: objet.nom,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), \" : (\", React.createElement(AppText, {\n    text: objet.nom,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }), \")\")));\n};\nexport default BoxPathologie;\nvar styles = StyleSheet.create({\n  subtitle: {\n    fontSize: fonts.subtitle.fontSize,\n    color: colors.black,\n    marginBottom: layout.padding,\n    lineHeight: fonts.subtitle.fontSize + 3,\n    marginHorizontal: layout.padding\n  },\n  button: {\n    borderRadius: layout.buttons.borderRadius,\n    marginHorizontal: layout.padding\n  },\n  textClick: {\n    marginLeft: 3,\n    textAlign: 'center'\n  },\n  text: {\n    marginLeft: 25,\n    lineHeight: fonts.subtitle.fontSize + 3,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","View","AppText","fonts","colors","layout","BoxPathologie","_ref","objet","_React$useState","useState","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","checked","setChecked","onPress","createElement","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","button","alignSelf","marginVertical","padding","flexDirection","text","nom","create","subtitle","fontSize","color","black","marginBottom","lineHeight","marginHorizontal","borderRadius","buttons","textClick","marginLeft","textAlign"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/components/atoms/BoxHistorique.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity} from 'react-native';\r\nimport { View } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport AppText from '@components/atoms/AppText';\r\nimport DropDownMenu from '@components/molecules/DropDownMenu'\r\nimport fonts from '@styles/fonts';\r\nimport colors from '@styles/colors';\r\nimport layout from '@styles/layout';\r\n\r\ntype Symptome = {\r\n    nom: string\r\n  }\r\n  \r\n  type Pathologie = {\r\n    nom: string;\r\n    date: string;\r\n    more?: string;\r\n    logo: string;\r\n  }\r\n\r\ntype Props = {\r\n    objet: Pathologie;\r\n    objets?: Symptome[]|Pathologie[];\r\n    ischeckeable ?: boolean;\r\n  };\r\n\r\n\r\nconst BoxPathologie = ({ objet }: Props): ReactElement => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const onPress = (): void => {\r\n    };\r\n  \r\n    return(\r\n      <View>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            {\r\n              alignSelf: 'stretch',\r\n              marginVertical: layout.padding/2,\r\n            },\r\n          ]}\r\n          onPress={onPress}\r\n        >\r\n          <View  style={{flexDirection:'row'}}>\r\n            {\r\n            (\r\n              <AppText \r\n                text={objet.nom}\r\n                style={styles.text}\r\n              />)} : (<AppText \r\n                text={objet.nom}\r\n                style={styles.text}\r\n              />)\r\n            \r\n            \r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n  \r\n    );\r\n  };\r\n  \r\n  export default BoxPathologie;\r\n\r\n  const styles = StyleSheet.create({\r\n    subtitle: {\r\n      fontSize: fonts.subtitle.fontSize,\r\n      color: colors.black,\r\n      marginBottom: layout.padding,\r\n      lineHeight: fonts.subtitle.fontSize + 3,\r\n      marginHorizontal: layout.padding\r\n    }, \r\n    button: {\r\n      borderRadius: layout.buttons.borderRadius,\r\n      marginHorizontal: layout.padding,\r\n    },\r\n    textClick: {\r\n      marginLeft: 3,\r\n      textAlign: 'center',\r\n    },\r\n    text: {\r\n      marginLeft: 25,\r\n      lineHeight: fonts.subtitle.fontSize + 3,\r\n      textAlign: 'center',\r\n    },\r\n  });\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}