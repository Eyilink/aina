{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { eachDayOfInterval, fromUnixTime, getUnixTime, isSameDay, isToday, sub } from 'date-fns';\nimport i18n from \"../i18n/i18n\";\nimport { PAIN_SYMPTOMS, SYMPTOMS } from \"../constants/constants\";\nexport var alertError = function alertError(_ref) {\n  var _ref$title = _ref.title,\n    title = _ref$title === void 0 ? i18n.t('commons.errors.title') : _ref$title,\n    _ref$message = _ref.message,\n    message = _ref$message === void 0 ? i18n.t('commons.errors.message') : _ref$message;\n  return Alert.alert(title, message, [{\n    text: i18n.t('commons.errors.ok')\n  }], {\n    cancelable: false\n  });\n};\nexport var isNumeric = function isNumeric(str) {\n  return /^\\d+$/.test(str);\n};\nexport var orderReportsByDate = function orderReportsByDate(reports) {\n  return reports.sort(function (a, b) {\n    return b.date - a.date;\n  });\n};\nexport var hasPreviousReportToday = function hasPreviousReportToday(currentReports) {\n  var lastReport = null;\n  if (currentReports.length) lastReport = currentReports[0];\n  return lastReport ? isToday(fromUnixTime(lastReport.date)) : false;\n};\nexport var getNumberOfSymptomsFromReport = function getNumberOfSymptomsFromReport(report) {\n  return SYMPTOMS.filter(function (symptom) {\n    return report[symptom] === true;\n  }).length;\n};\nexport var getRecommandation = function getRecommandation(reports) {\n  var lastReport = reports[0];\n  var numberOfSymptomsFromLastReport = getNumberOfSymptomsFromReport(lastReport);\n  if (numberOfSymptomsFromLastReport > 1) return 'end3';\n  if (numberOfSymptomsFromLastReport === 1) return 'end2';\n  if (numberOfSymptomsFromLastReport === 0) {\n    if (reports.length === 1) return 'end1';\n    var numberOfSymptomsFromThreePreviousReport = reports.slice(-4, -1).map(function (report) {\n      return SYMPTOMS.filter(function (symptom) {\n        return report[symptom] === true;\n      });\n    }).map(function (symptoms) {\n      return symptoms.length;\n    }).reduce(function (acc, current) {\n      return acc + current;\n    });\n    if (numberOfSymptomsFromThreePreviousReport < 2) return 'end1';\n    return 'end2bis';\n  }\n  return 'end1';\n};\nexport var fillGapsInReports = function fillGapsInReports(reports) {\n  var emptyReport = {\n    isFilled: false,\n    agueusiaAnosmia: false,\n    breathlessness: false,\n    cough: false,\n    coughIntensity: null,\n    date: 0,\n    digestive: false,\n    fever: false,\n    pain: false,\n    painIntensity: null,\n    painSymptoms: PAIN_SYMPTOMS,\n    notes: '',\n    peopleMet: '',\n    runnyNose: false,\n    skinProblem: false,\n    sleep: false,\n    sleepIntensity: null,\n    temperature: null,\n    tiredness: false,\n    tirednessIntensity: null\n  };\n  var eachDaybetweenMinAndMaxDate = eachDayOfInterval({\n    start: reports.length < 7 ? sub(fromUnixTime(reports[reports.length - 1].date), {\n      days: 7 - reports.length\n    }) : fromUnixTime(reports[reports.length - 1].date),\n    end: fromUnixTime(reports[0].date)\n  });\n  var reportsWithFilledGaps = [];\n  eachDaybetweenMinAndMaxDate.map(function (date) {\n    var sameDayInReports = reports.find(function (report) {\n      return isSameDay(date, fromUnixTime(report.date));\n    });\n    if (sameDayInReports) reportsWithFilledGaps.push(sameDayInReports);else {\n      var dateOfEmptyReport = getUnixTime(date);\n      reportsWithFilledGaps.push(_objectSpread(_objectSpread({}, emptyReport), {}, {\n        date: dateOfEmptyReport\n      }));\n    }\n  });\n  return reportsWithFilledGaps;\n};","map":{"version":3,"names":["eachDayOfInterval","fromUnixTime","getUnixTime","isSameDay","isToday","sub","i18n","PAIN_SYMPTOMS","SYMPTOMS","alertError","_ref","_ref$title","title","t","_ref$message","message","Alert","alert","text","cancelable","isNumeric","str","test","orderReportsByDate","reports","sort","a","b","date","hasPreviousReportToday","currentReports","lastReport","length","getNumberOfSymptomsFromReport","report","filter","symptom","getRecommandation","numberOfSymptomsFromLastReport","numberOfSymptomsFromThreePreviousReport","slice","map","symptoms","reduce","acc","current","fillGapsInReports","emptyReport","isFilled","agueusiaAnosmia","breathlessness","cough","coughIntensity","digestive","fever","pain","painIntensity","painSymptoms","notes","peopleMet","runnyNose","skinProblem","sleep","sleepIntensity","temperature","tiredness","tirednessIntensity","eachDaybetweenMinAndMaxDate","start","days","end","reportsWithFilledGaps","sameDayInReports","find","push","dateOfEmptyReport","_objectSpread"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/helpers/utils.ts"],"sourcesContent":["import { Alert } from 'react-native';\r\nimport {\r\n  eachDayOfInterval,\r\n  fromUnixTime,\r\n  getUnixTime,\r\n  isSameDay,\r\n  isToday,\r\n  sub,\r\n} from 'date-fns';\r\n\r\nimport i18n from '@i18n/i18n';\r\nimport { Report } from '@store/types';\r\nimport { PAIN_SYMPTOMS, SYMPTOMS } from '@constants/constants';\r\n\r\nexport const alertError = ({\r\n  title = i18n.t('commons.errors.title'),\r\n  message = i18n.t('commons.errors.message'),\r\n}): void =>\r\n  Alert.alert(title, message, [{ text: i18n.t('commons.errors.ok') }], {\r\n    cancelable: false,\r\n  });\r\n\r\nexport const isNumeric = (str: string): boolean => /^\\d+$/.test(str);\r\n\r\nexport const orderReportsByDate = (reports: Report[]): Report[] =>\r\n  reports.sort((a, b) => b.date - a.date);\r\n\r\nexport const hasPreviousReportToday = (currentReports: Report[]): boolean => {\r\n  let lastReport = null;\r\n  if (currentReports.length) lastReport = currentReports[0];\r\n  return lastReport ? isToday(fromUnixTime(lastReport.date)) : false;\r\n};\r\n\r\nexport const getNumberOfSymptomsFromReport = (report: Report): number =>\r\n  SYMPTOMS.filter((symptom: keyof Report) => report[symptom] === true).length;\r\n\r\nexport const getRecommandation = (reports: Report[]): string => {\r\n  const lastReport = reports[0];\r\n  const numberOfSymptomsFromLastReport = getNumberOfSymptomsFromReport(\r\n    lastReport,\r\n  );\r\n\r\n  if (numberOfSymptomsFromLastReport > 1) return 'end3';\r\n\r\n  if (numberOfSymptomsFromLastReport === 1) return 'end2';\r\n\r\n  if (numberOfSymptomsFromLastReport === 0) {\r\n    if (reports.length === 1) return 'end1';\r\n\r\n    const numberOfSymptomsFromThreePreviousReport = reports\r\n      .slice(-4, -1)\r\n      .map((report: Report) =>\r\n        SYMPTOMS.filter((symptom: keyof Report) => report[symptom] === true),\r\n      )\r\n      .map((symptoms) => symptoms.length)\r\n      .reduce((acc: number, current: number) => acc + current);\r\n\r\n    if (numberOfSymptomsFromThreePreviousReport < 2) return 'end1';\r\n\r\n    return 'end2bis';\r\n  }\r\n\r\n  return 'end1';\r\n};\r\n\r\nexport const fillGapsInReports = (reports: Report[]) => {\r\n  const emptyReport: Report = {\r\n    isFilled: false,\r\n    agueusiaAnosmia: false,\r\n    breathlessness: false,\r\n    cough: false,\r\n    coughIntensity: null,\r\n    date: 0,\r\n    digestive: false,\r\n    fever: false,\r\n    pain: false,\r\n    painIntensity: null,\r\n    painSymptoms: PAIN_SYMPTOMS,\r\n    notes: '',\r\n    peopleMet: '',\r\n    runnyNose: false,\r\n    skinProblem: false,\r\n    sleep: false,\r\n    sleepIntensity: null,\r\n    temperature: null,\r\n    tiredness: false,\r\n    tirednessIntensity: null,\r\n  };\r\n\r\n  const eachDaybetweenMinAndMaxDate = eachDayOfInterval({\r\n    start:\r\n      reports.length < 7\r\n        ? sub(fromUnixTime(reports[reports.length - 1].date), {\r\n            days: 7 - reports.length,\r\n          })\r\n        : fromUnixTime(reports[reports.length - 1].date),\r\n    end: fromUnixTime(reports[0].date),\r\n  });\r\n\r\n  const reportsWithFilledGaps: Report[] = [];\r\n\r\n  eachDaybetweenMinAndMaxDate.map((date) => {\r\n    const sameDayInReports = reports.find((report: Report) =>\r\n      isSameDay(date, fromUnixTime(report.date)),\r\n    );\r\n\r\n    if (sameDayInReports) reportsWithFilledGaps.push(sameDayInReports);\r\n    else {\r\n      const dateOfEmptyReport = getUnixTime(date);\r\n      reportsWithFilledGaps.push({ ...emptyReport, date: dateOfEmptyReport });\r\n    }\r\n  });\r\n\r\n  return reportsWithFilledGaps;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}