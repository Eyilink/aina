{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport Header from \"./Header\";\nimport { forSlideLeft, forSlideUp, forNoAnimation, forSlideRight } from \"../../TransitionConfigs/HeaderStyleInterpolators\";\nexport default function HeaderContainer(_ref) {\n  var mode = _ref.mode,\n    scenes = _ref.scenes,\n    layout = _ref.layout,\n    insets = _ref.insets,\n    getFocusedRoute = _ref.getFocusedRoute,\n    getPreviousRoute = _ref.getPreviousRoute,\n    onContentHeightChange = _ref.onContentHeightChange,\n    gestureDirection = _ref.gestureDirection,\n    styleInterpolator = _ref.styleInterpolator,\n    style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map(function (scene, i, self) {\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    var options = scene.descriptor.options;\n    var isFocused = focusedRoute.key === scene.route.key;\n    var previousRoute = getPreviousRoute({\n      route: scene.route\n    });\n    var previous;\n    if (previousRoute) {\n      for (var j = i - 1; j >= 0; j--) {\n        var s = self[j];\n        if (s && s.route.key === previousRoute.key) {\n          previous = s;\n          break;\n        }\n      }\n    }\n    var previousScene = self[i - 1];\n    var nextScene = self[i + 1];\n    var isHeaderStatic = previousScene && previousScene.descriptor.options.headerShown === false && !nextScene || nextScene && nextScene.descriptor.options.headerShown === false;\n    var props = {\n      mode: mode,\n      layout: layout,\n      insets: insets,\n      scene: scene,\n      previous: previous,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? forSlideUp : gestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : styleInterpolator : forNoAnimation\n    };\n    return React.createElement(NavigationContext.Provider, {\n      key: scene.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: scene.route\n    }, React.createElement(View, {\n      onLayout: onContentHeightChange ? function (e) {\n        return onContentHeightChange({\n          route: scene.route,\n          height: e.nativeEvent.layout.height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || options.headerTransparent ? styles.header : null\n    }, options.headerShown !== false ? options.header !== undefined ? options.header(props) : React.createElement(Header, props) : null)));\n  }));\n}\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","NavigationContext","NavigationRouteContext","Header","forSlideLeft","forSlideUp","forNoAnimation","forSlideRight","HeaderContainer","_ref","mode","scenes","layout","insets","getFocusedRoute","getPreviousRoute","onContentHeightChange","gestureDirection","styleInterpolator","style","focusedRoute","createElement","pointerEvents","slice","map","scene","i","self","length","options","descriptor","isFocused","key","route","previousRoute","previous","j","s","previousScene","nextScene","isHeaderStatic","headerShown","props","navigation","Provider","value","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","headerTransparent","styles","header","create","position","top","left","right"],"sources":["C:\\Users\\HP\\Documents\\Ping\\pingaina\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Header\\HeaderContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  Route,\n  ParamListBase,\n} from '@react-navigation/native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport {\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getFocusedRoute,\n  getPreviousRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n\n  return (\n    <View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const { options } = scene.descriptor;\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previousRoute = getPreviousRoute({ route: scene.route });\n\n        let previous;\n\n        if (previousRoute) {\n          // The previous scene will be shortly before the current scene in the array\n          // So loop back from current index to avoid looping over the full array\n          for (let j = i - 1; j >= 0; j--) {\n            const s = self[j];\n\n            if (s && s.route.key === previousRoute.key) {\n              previous = s;\n              break;\n            }\n          }\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n        const isHeaderStatic =\n          (previousScene &&\n            previousScene.descriptor.options.headerShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          (nextScene && nextScene.descriptor.options.headerShown === false);\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp<\n            ParamListBase\n          >,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) =>\n                        onContentHeightChange({\n                          route: scene.route,\n                          height: e.nativeEvent.layout.height,\n                        })\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || options.headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {options.headerShown !== false ? (\n                  options.header !== undefined ? (\n                    options.header(props)\n                  ) : (\n                    <Header {...props} />\n                  )\n                ) : null}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}