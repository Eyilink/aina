{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\Evaluate.tsx\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"../../components/molecules/Container\";\nimport { useReportsStore } from \"../../store/store\";\nimport { hasPreviousReportToday } from \"../../helpers/utils\";\nimport layout from \"../../styles/layout\";\nimport fonts from \"../../styles/fonts\";\nimport i18n from \"../../i18n/i18n\";\nimport { MALADIE1 } from \"../../constants/constants\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar Evaluate = function Evaluate(_ref) {\n  var navigation = _ref.navigation;\n  var _useReportsStore = useReportsStore({\n      disease: MALADIE1\n    }),\n    _useReportsStore2 = _slicedToArray(_useReportsStore, 1),\n    reports = _useReportsStore2[0];\n  var isNewReportOfDay = !reports || !hasPreviousReportToday(reports);\n  var onStartReport = function onStartReport() {\n    if (!isNewReportOfDay) {\n      Alert.alert(i18n.t('commons.attention'), i18n.t('evaluate.erase'), [{\n        text: i18n.t('commons.errors.cancel'),\n        style: 'cancel'\n      }, {\n        text: i18n.t('commons.errors.ok'),\n        onPress: function onPress() {\n          return navigation.navigate('Temperature');\n        }\n      }], {\n        cancelable: false\n      });\n    } else navigation.navigate('Temperature');\n  };\n  return React.createElement(Container, {\n    noMarginBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\nvar SymptomesMenu = function SymptomesMenu() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    menuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var symptomes = ['Symptome 1', 'Symptome 2', 'Symptome 3'];\n  var handleMenuPress = function handleMenuPress() {\n    setMenuOpen(!menuOpen);\n  };\n  var handleSymptomePress = function handleSymptomePress(symptome) {};\n  return React.createElement(View, {\n    style: {\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleMenuPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Choisir un symptome\")), menuOpen && React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, symptomes.map(function (symptome, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return handleSymptomePress(symptome);\n      },\n      style: {\n        paddingVertical: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, symptome));\n  })));\n};\nexport default SymptomesMenu;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: layout.padding\n  },\n  subtitle: {\n    marginTop: layout.padding * 2,\n    fontSize: fonts.sections.fontSize,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","Alert","StyleSheet","View","Container","useReportsStore","hasPreviousReportToday","layout","fonts","i18n","MALADIE1","Text","TouchableOpacity","Evaluate","_ref","navigation","_useReportsStore","disease","_useReportsStore2","_slicedToArray","reports","isNewReportOfDay","onStartReport","alert","t","text","style","onPress","navigate","cancelable","createElement","noMarginBottom","__source","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","SymptomesMenu","_useState","_useState2","menuOpen","setMenuOpen","symptomes","handleMenuPress","handleSymptomePress","symptome","padding","marginTop","map","index","key","paddingVertical","create","flex","subtitle","fontSize","sections","textAlign"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/screens/Authenticated/Evaluate.tsx"],"sourcesContent":["import React, { ReactElement , useState } from 'react';\r\nimport { Alert, StyleSheet, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n//import * as XLSX from 'xlsx';\r\n//import * as fs from 'fs';\r\n\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport SubTitle from '@components/atoms/SubTitle';\r\n//import Button from '@components/atoms/Button';\r\n\r\nimport { useReportsStore } from '@store/store';\r\nimport { AuthenticatedStackParamList } from '@navigation/types';\r\nimport { hasPreviousReportToday } from '@helpers/utils';\r\n\r\nimport layout from '@styles/layout';\r\nimport fonts from '@styles/fonts';\r\nimport i18n from '@i18n/i18n';\r\nimport { DATE_TODAY, MALADIE1 } from '@constants/constants';\r\n\r\nimport { Text, Button, TouchableOpacity } from 'react-native';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<AuthenticatedStackParamList, 'Temperature'>;\r\n};\r\n\r\nconst Evaluate = ({ navigation }: Props): ReactElement => {\r\n  const [reports] = useReportsStore({ disease: MALADIE1 });\r\n  const isNewReportOfDay = !reports || !hasPreviousReportToday(reports);\r\n\r\n  const onStartReport = (): void => {\r\n    if (!isNewReportOfDay) {\r\n      Alert.alert(\r\n        i18n.t('commons.attention'),\r\n        i18n.t('evaluate.erase'),\r\n        [\r\n          { text: i18n.t('commons.errors.cancel'), style: 'cancel' },\r\n          {\r\n            text: i18n.t('commons.errors.ok'),\r\n            onPress: (): void => navigation.navigate('Temperature'),\r\n          },\r\n        ],\r\n        { cancelable: false },\r\n      );\r\n    } else navigation.navigate('Temperature');\r\n  };\r\n\r\n  return (\r\n    <Container noMarginBottom>\r\n      <View style={styles.container}>\r\n        {/* <Title isPrimary isDate isCenter text={DATE_TODAY} />\r\n        {!isNewReportOfDay ? (\r\n          <SubTitle text={i18n.t('evaluate.restart')} style={styles.subtitle} />\r\n        ) : (\r\n          <SubTitle text={i18n.t('evaluate.start')} style={styles.subtitle} />\r\n        )}\r\n        <Button\r\n          text={i18n.t('commons.validate')}\r\n          onPress={onStartReport}\r\n          isValidate\r\n          stretch\r\n        /> */}\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\n//export default Evaluate;\r\n\r\nconst SymptomesMenu = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const symptomes = ['Symptome 1', 'Symptome 2', 'Symptome 3'];\r\n\r\n  const handleMenuPress = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  const handleSymptomePress = (symptome : String) => {\r\n    // faire quelque chose lorsqu'un symptome est sélectionné\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 20 }}>\r\n      <TouchableOpacity onPress={handleMenuPress}>\r\n        <Text>Choisir un symptome</Text>\r\n      </TouchableOpacity>\r\n      {menuOpen && (\r\n        <View style={{ marginTop: 10 }}>\r\n          {symptomes.map((symptome, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              onPress={() => handleSymptomePress(symptome)}\r\n              style={{ paddingVertical: 5 }}\r\n            >\r\n              <Text>{symptome}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SymptomesMenu;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingVertical: layout.padding,\r\n  },\r\n  subtitle: {\r\n    marginTop: layout.padding * 2,\r\n    fontSize: fonts.sections.fontSize,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}