{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\History.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppText from \"../../components/atoms/AppText\";\nimport layout from \"../../styles/layout\";\nimport fonts from \"../../styles/fonts\";\nimport { AntDesign } from '@expo/vector-icons';\nimport BoxHistorique from \"../../components/atoms/BoxHistorique\";\nvar exempleList = [{\n  nom: 'Articulaire',\n  date: \"15/01/2023\",\n  more: \"Coude - Gauhe\",\n  namelogo: \"picture\"\n}, {\n  nom: 'Artie',\n  date: \"15/01/2023\",\n  more: \"Coude - Gauhe\",\n  namelogo: \"picture\"\n}, {\n  nom: 'Articaire',\n  date: \"15/01/2023\",\n  more: \"Coude - Gau\",\n  namelogo: \"picture\"\n}];\nvar History = function History(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isClicked = _useState2[0],\n    setIsClicked = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentIndex = _useState4[0],\n    setCurrentIndex = _useState4[1];\n  var onPressPath = function onPressPath(index) {\n    setIsClicked(true);\n    setCurrentIndex(index);\n    console.log(index);\n  };\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, isClicked ? React.createElement(React.Fragment, null, React.createElement(AntDesign, {\n    name: exempleList[currentIndex].namelogo,\n    size: 50,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(AppText, {\n    text: exempleList[currentIndex].nom,\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), React.createElement(AppText, {\n    text: exempleList[currentIndex].more,\n    style: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), React.createElement(AppText, {\n    text: \"Depuis le \" + exempleList[currentIndex].date,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))) : React.createElement(React.Fragment, null, \" \", React.createElement(AppText, {\n    text: \"Historique\",\n    style: styles.pagetitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), exempleList.map(function (object, index) {\n    return React.createElement(BoxHistorique, {\n      onPress: function onPress() {\n        return onPressPath(index);\n      },\n      key: index,\n      objet: object,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    });\n  }), \"  \"));\n};\nexport default History;\nvar styles = StyleSheet.create({\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 2\n  },\n  subtitle: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  text: {\n    fontSize: 14\n  },\n  pagetitle: {\n    fontSize: 28,\n    marginBottom: 20,\n    marginLeft: 5,\n    marginTop: 5\n  },\n  container: {},\n  buttonsContainer: {\n    flexDirection: 'row',\n    marginHorizontal: layout.padding\n  },\n  button: {\n    flex: 1,\n    paddingHorizontal: layout.padding,\n    paddingVertical: layout.padding / 6,\n    marginBottom: layout.padding,\n    alignItems: 'center'\n  },\n  buttonList: {\n    borderTopLeftRadius: layout.buttons.borderRadius,\n    borderBottomLeftRadius: layout.buttons.borderRadius\n  },\n  buttonCharts: {\n    borderTopRightRadius: layout.buttons.borderRadius,\n    borderBottomRightRadius: layout.buttons.borderRadius\n  },\n  textButtons: {\n    textAlign: 'center',\n    fontFamily: fonts.label.fontFamily,\n    fontSize: fonts.label.fontSize,\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","AppText","layout","fonts","AntDesign","BoxHistorique","exempleList","nom","date","more","namelogo","History","_ref","navigation","_useState","_useState2","_slicedToArray","isClicked","setIsClicked","_useState3","_useState4","currentIndex","setCurrentIndex","onPressPath","index","console","log","createElement","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","name","size","color","style","styles","content","text","title","subtitle","pagetitle","map","object","onPress","key","objet","create","fontSize","fontWeight","marginBottom","marginLeft","marginTop","container","buttonsContainer","flexDirection","marginHorizontal","padding","button","flex","paddingHorizontal","paddingVertical","alignItems","buttonList","borderTopLeftRadius","buttons","borderRadius","borderBottomLeftRadius","buttonCharts","borderTopRightRadius","borderBottomRightRadius","textButtons","textAlign","fontFamily","label"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/screens/Authenticated/History.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport HistoryTimeline from '@components/molecules/HistoryTimeline';\r\nimport HistoryCharts from '@components/molecules/HistoryCharts';\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport Subtitle from '@components/atoms/SubTitle';\r\nimport Button from '@components/atoms/Button';\r\nimport AppText from '@components/atoms/AppText';\r\n\r\nimport { BottomTabParamList } from '@navigation/types';\r\nimport { useReportsStore } from '@store/store';\r\n\r\nimport layout from '@styles/layout';\r\nimport i18n from '@i18n/i18n';\r\nimport fonts from '@styles/fonts';\r\nimport colors from '@styles/colors';\r\nimport { MALADIE1 } from '@constants/constants';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport BoxHistorique from '@components/atoms/BoxHistorique';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<BottomTabParamList, 'History'>;\r\n};\r\n\r\n\r\ntype Pathologie = {\r\n  nom: string;\r\n  date: string;\r\n  more: string;\r\n  namelogo: string;\r\n}\r\n\r\nconst exempleList: Pathologie[] = [\r\n  { nom: 'Articulaire',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" },\r\n  { nom: 'Artie',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" },\r\n  { nom: 'Articaire',date:\"15/01/2023\", more:\"Coude - Gau\",namelogo:\"picture\" },\r\n  ]\r\n\r\n  \r\n\r\n\r\n\r\nconst History = ({ navigation }: Props): ReactElement => {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  \r\n\r\n  const onPressPath = (index : number): void =>{\r\n    setIsClicked(true);\r\n    setCurrentIndex(index);\r\n    console.log(index);\r\n  }\r\n\r\n  return (\r\n    \r\n    <View>\r\n      {isClicked ? (<> \r\n        <AntDesign name={exempleList[currentIndex].namelogo} size={50} color=\"black\" />\r\n                <View style = {styles.content}>\r\n                    <AppText text={exempleList[currentIndex].nom} style={styles.title} />\r\n                    <AppText text={exempleList[currentIndex].more} style={styles.subtitle} />\r\n                    <AppText text= {\"Depuis le \" + exempleList[currentIndex].date} style={styles.text} />\r\n      \r\n      \r\n      </View>\r\n      </>) : \r\n      \r\n      \r\n      \r\n      (<> <AppText text={\"Historique\"} style={styles.pagetitle} />   \r\n      {exempleList.map((object, index) => {    \r\n                return (<BoxHistorique onPress={() => onPressPath(index)} key={index} objet={object}/>);      \r\n            })}  </>)}\r\n          \r\n        {/* \r\n        const [reports] = useReportsStore({ disease: MALADIE1 });\r\n  const [reportType, setReportType] = useState<string>('list');\r\n  const [isChartFocused, setIsChartFocused] = useState<boolean>(false);\r\n\r\n  const exemple: Pathologie = {nom: 'Articulaire',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" };\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      setIsChartFocused(true);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('blur', () => {\r\n      setIsChartFocused(false);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  const onPressList = (): void => {\r\n    setIsChartFocused(false);\r\n    setReportType('list');\r\n  };\r\n\r\n  const onPressChart = (): void => {\r\n    setIsChartFocused(true);\r\n    setReportType('chart');\r\n  };\r\n        \r\n        <Title isPrimary text={i18n.t('navigation.authenticated.history')} />\r\n        {!reports ? (\r\n          <>\r\n            <Subtitle\r\n              text={i18n.t('history.firstTime')}\r\n              style={styles.subtitle}\r\n            />\r\n            <Button\r\n              text={i18n.t('navigation.authenticated.evaluate')}\r\n              onPress={(): void => navigation.navigate('Evaluate')}\r\n              isValidate\r\n              stretch\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <View style={styles.buttonsContainer}>\r\n              <TouchableOpacity\r\n                onPress={onPressList}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonList,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'list' ? colors.primary : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"list\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'list' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'list' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.list')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={onPressChart}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonCharts,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'chart'\r\n                        ? colors.primary\r\n                        : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"bar-chart-2\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'chart' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'chart' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.chart')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {reportType === 'list' ? (\r\n              <HistoryTimeline reports={reports} />\r\n            ) : (\r\n              <ScrollView persistentScrollbar>\r\n                <HistoryCharts reports={reports} isFocused={isChartFocused} />\r\n              </ScrollView>\r\n            )}\r\n          </>\r\n        )} */}\r\n      \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default History;\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold' as 'bold',\r\n    marginBottom: 2,\r\n    \r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n  },\r\n  pagetitle :{\r\n    fontSize: 28,\r\n    marginBottom: 20,\r\n    marginLeft: 5,\r\n    marginTop:5,\r\n  },\r\n  container: {\r\n    //flex: 1,\r\n    //paddingTop: layout.padding,\r\n  },\r\n  // subtitle: {\r\n  //   marginTop: layout.padding,\r\n  //   textAlign: 'center',\r\n  // },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: layout.padding,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    paddingHorizontal: layout.padding,\r\n    paddingVertical: layout.padding / 6,\r\n    marginBottom: layout.padding,\r\n    alignItems: 'center',\r\n  },\r\n  buttonList: {\r\n    borderTopLeftRadius: layout.buttons.borderRadius,\r\n    borderBottomLeftRadius: layout.buttons.borderRadius,\r\n  },\r\n  buttonCharts: {\r\n    borderTopRightRadius: layout.buttons.borderRadius,\r\n    borderBottomRightRadius: layout.buttons.borderRadius,\r\n  },\r\n  textButtons: {\r\n    textAlign: 'center',\r\n    fontFamily: fonts.label.fontFamily,\r\n    fontSize: fonts.label.fontSize,\r\n    marginTop: 4,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}