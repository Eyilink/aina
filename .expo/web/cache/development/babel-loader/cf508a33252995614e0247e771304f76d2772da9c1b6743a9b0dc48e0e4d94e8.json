{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nvar UNINTIALIZED_STATE = {};\nexport default function useSyncState(initialState) {\n  var stateRef = React.useRef(UNINTIALIZED_STATE);\n  var isSchedulingRef = React.useRef(false);\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current = typeof initialState === 'function' ? initialState() : initialState;\n  }\n  var _React$useState = React.useState(stateRef.current),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    trackingState = _React$useState2[0],\n    setTrackingState = _React$useState2[1];\n  var getState = React.useCallback(function () {\n    return stateRef.current;\n  }, []);\n  var setState = React.useCallback(function (state) {\n    if (state === stateRef.current) {\n      return;\n    }\n    stateRef.current = state;\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n  var scheduleUpdate = React.useCallback(function (callback) {\n    isSchedulingRef.current = true;\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n  var flushUpdates = React.useCallback(function () {\n    setTrackingState(stateRef.current);\n  }, []);\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n  var state = stateRef.current;\n  return [state, getState, setState, scheduleUpdate, flushUpdates];\n}","map":{"version":3,"names":["React","UNINTIALIZED_STATE","useSyncState","initialState","stateRef","useRef","isSchedulingRef","current","_React$useState","useState","_React$useState2","_slicedToArray","trackingState","setTrackingState","getState","useCallback","setState","state","scheduleUpdate","callback","flushUpdates"],"sources":["C:\\Users\\hibab\\Downloads\\aina19\\pingaina\\node_modules\\@react-navigation\\core\\lib\\module\\useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-ignore\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,kBAAkB,GAAG,EAA3B;AAKA,eAAe,SAASC,YAATA,CAAyBC,YAAzB,EAAuD;EACpE,IAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAgBJ,kBAAhB,CAAjB;EACA,IAAMK,eAAe,GAAGN,KAAK,CAACK,MAAN,CAAa,KAAb,CAAxB;EAEA,IAAID,QAAQ,CAACG,OAAT,KAAqBN,kBAAzB,EAA6C;IAC3CG,QAAQ,CAACG,OAAT,GAEE,OAAOJ,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,EAAjD,GAAsDA,YAFxD;EAGD;EAAA,IAAAK,eAAA,GAEyCR,KAAK,CAACS,QAAN,CAAeL,QAAQ,CAACG,OAAxB,CAA1C;IAAAG,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,aAAD,GAAAF,gBAAA;IAAgBG,gBAAhB,GAAAH,gBAAA;EAEN,IAAMI,QAAQ,GAAGd,KAAK,CAACe,WAAN,CAAkB;IAAA,OAAMX,QAAQ,CAACG,OAAjC;EAAA,GAA0C,EAA1C,CAAjB;EAEA,IAAMS,QAAQ,GAAGhB,KAAK,CAACe,WAAN,CAAmB,UAAAE,KAAD,EAAc;IAC/C,IAAIA,KAAK,KAAKb,QAAQ,CAACG,OAAvB,EAAgC;MAC9B;IACD;IAEDH,QAAQ,CAACG,OAAT,GAAmBU,KAAnB;IAEA,IAAI,CAACX,eAAe,CAACC,OAArB,EAA8B;MAC5BM,gBAAgB,CAACI,KAAD,CAAhB;IACD;EACF,CAVgB,EAUd,EAVc,CAAjB;EAYA,IAAMC,cAAc,GAAGlB,KAAK,CAACe,WAAN,CAAmB,UAAAI,QAAD,EAA0B;IACjEb,eAAe,CAACC,OAAhB,GAA0B,IAA1B;IAEA,IAAI;MACFY,QAAQ;IACT,CAFD,SAEU;MACRb,eAAe,CAACC,OAAhB,GAA0B,KAA1B;IACD;EACF,CARsB,EAQpB,EARoB,CAAvB;EAUA,IAAMa,YAAY,GAAGpB,KAAK,CAACe,WAAN,CAAkB,YAAM;IAG3CF,gBAAgB,CAACT,QAAQ,CAACG,OAAV,CAAhB;EACD,CAJoB,EAIlB,EAJkB,CAArB;EAQA,IAAIK,aAAa,KAAKR,QAAQ,CAACG,OAA/B,EAAwC;IACtCM,gBAAgB,CAACT,QAAQ,CAACG,OAAV,CAAhB;EACD;EAED,IAAMU,KAAK,GAAGb,QAAQ,CAACG,OAAvB;EAEA,OAAO,CAACU,KAAD,EAAQH,QAAR,EAAkBE,QAAlB,EAA4BE,cAA5B,EAA4CE,YAA5C,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}