{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\node_modules\\\\react-native-confirmation-code-field\\\\lib\\\\CodeField.js\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { forwardRef } from 'react';\nimport { getStyle, getSymbols } from \"./utils\";\nimport useFocusState from \"./useFocusState\";\nimport styles from \"./CodeField.styles\";\nvar DEFAULT_CELL_COUNT = 4;\nvar CodeField = function CodeField(_ref, ref) {\n  var rootStyle = _ref.rootStyle,\n    textInputStyle = _ref.textInputStyle,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    value = _ref.value,\n    renderCell = _ref.renderCell,\n    _ref$cellCount = _ref.cellCount,\n    cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n    _ref$RootProps = _ref.RootProps,\n    RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n    _ref$RootComponent = _ref.RootComponent,\n    RootComponent = _ref$RootComponent === void 0 ? View : _ref$RootComponent,\n    rest = _objectWithoutProperties(_ref, [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"]);\n  var _useFocusState = useFocusState({\n      onBlur: onBlur,\n      onFocus: onFocus\n    }),\n    _useFocusState2 = _slicedToArray(_useFocusState, 3),\n    isFocused = _useFocusState2[0],\n    handleOnBlur = _useFocusState2[1],\n    handleOnFocus = _useFocusState2[2];\n  var cells = getSymbols(value || '', cellCount).map(function (symbol, index, symbols) {\n    var isFirstEmptySymbol = symbols.indexOf('') === index;\n    return renderCell({\n      index: index,\n      symbol: symbol,\n      isFocused: isFocused && isFirstEmptySymbol\n    });\n  });\n  return React.createElement(RootComponent, _extends({}, RootProps, {\n    style: getStyle(styles.root, rootStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), cells, React.createElement(TextInput, _extends({\n    caretHidden: true,\n    disableFullscreenUI: true,\n    spellCheck: false,\n    autoCorrect: false,\n    blurOnSubmit: false,\n    clearButtonMode: \"never\",\n    autoCapitalize: \"characters\",\n    underlineColorAndroid: \"transparent\",\n    maxLength: cellCount\n  }, rest, {\n    value: value,\n    onBlur: handleOnBlur,\n    onFocus: handleOnFocus,\n    style: getStyle(styles.textInput, textInputStyle),\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })));\n};\nexport default forwardRef(CodeField);","map":{"version":3,"names":["React","forwardRef","getStyle","getSymbols","useFocusState","styles","DEFAULT_CELL_COUNT","CodeField","_ref","ref","rootStyle","textInputStyle","onBlur","onFocus","value","renderCell","_ref$cellCount","cellCount","_ref$RootProps","RootProps","_ref$RootComponent","RootComponent","View","rest","_objectWithoutProperties","_useFocusState","_useFocusState2","_slicedToArray","isFocused","handleOnBlur","handleOnFocus","cells","map","symbol","index","symbols","isFirstEmptySymbol","indexOf","createElement","_extends","style","root","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextInput","caretHidden","disableFullscreenUI","spellCheck","autoCorrect","blurOnSubmit","clearButtonMode","autoCapitalize","underlineColorAndroid","maxLength","textInput"],"sources":["C:/Users/HP/Documents/Ping/pingaina/node_modules/react-native-confirmation-code-field/lib/CodeField.js"],"sourcesContent":["import { TextInput, View, } from 'react-native';\nimport React, { forwardRef } from 'react';\nimport { getStyle, getSymbols } from './utils';\nimport useFocusState from './useFocusState';\nimport styles from './CodeField.styles';\nconst DEFAULT_CELL_COUNT = 4;\nconst CodeField = ({ rootStyle, textInputStyle, onBlur, onFocus, value, renderCell, cellCount = DEFAULT_CELL_COUNT, RootProps = {}, RootComponent = View, ...rest }, ref) => {\n    const [isFocused, handleOnBlur, handleOnFocus] = useFocusState({\n        onBlur,\n        onFocus,\n    });\n    const cells = getSymbols(value || '', cellCount).map((symbol, index, symbols) => {\n        const isFirstEmptySymbol = symbols.indexOf('') === index;\n        return renderCell({\n            index,\n            symbol,\n            isFocused: isFocused && isFirstEmptySymbol,\n        });\n    });\n    return (<RootComponent {...RootProps} style={getStyle(styles.root, rootStyle)}>\n      {cells}\n      <TextInput caretHidden disableFullscreenUI spellCheck={false} autoCorrect={false} blurOnSubmit={false} clearButtonMode=\"never\" autoCapitalize=\"characters\" underlineColorAndroid=\"transparent\" maxLength={cellCount} {...rest} value={value} onBlur={handleOnBlur} onFocus={handleOnFocus} style={getStyle(styles.textInput, textInputStyle)} ref={ref}/>\n    </RootComponent>);\n};\nexport default forwardRef(CodeField);\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,UAAU;AAC7B,OAAOC,aAAa;AACpB,OAAOC,MAAM;AACb,IAAMC,kBAAkB,GAAG,CAAC;AAC5B,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAsJC,GAAG,EAAK;EAAA,IAAxJC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IAAEC,MAAM,GAAAJ,IAAA,CAANI,MAAM;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IAAEC,KAAK,GAAAN,IAAA,CAALM,KAAK;IAAEC,UAAU,GAAAP,IAAA,CAAVO,UAAU;IAAAC,cAAA,GAAAR,IAAA,CAAES,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAGV,kBAAkB,GAAAU,cAAA;IAAAE,cAAA,GAAAV,IAAA,CAAEW,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,CAAC,GAAAA,cAAA;IAAAE,kBAAA,GAAAZ,IAAA,CAAEa,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAGE,IAAI,GAAAF,kBAAA;IAAKG,IAAI,GAAAC,wBAAA,CAAAhB,IAAA;EAAA,IAAAiB,cAAA,GAC5GrB,aAAa,CAAC;MAC3DQ,MAAM,EAANA,MAAM;MACNC,OAAO,EAAPA;IACJ,CAAC,CAAC;IAAAa,eAAA,GAAAC,cAAA,CAAAF,cAAA;IAHKG,SAAS,GAAAF,eAAA;IAAEG,YAAY,GAAAH,eAAA;IAAEI,aAAa,GAAAJ,eAAA;EAI7C,IAAMK,KAAK,GAAG5B,UAAU,CAACW,KAAK,IAAI,EAAE,EAAEG,SAAS,CAAC,CAACe,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAK;IAC7E,IAAMC,kBAAkB,GAAGD,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC,KAAKH,KAAK;IACxD,OAAOnB,UAAU,CAAC;MACdmB,KAAK,EAALA,KAAK;MACLD,MAAM,EAANA,MAAM;MACNL,SAAS,EAAEA,SAAS,IAAIQ;IAC5B,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAQpC,KAAA,CAAAsC,aAAA,CAACjB,aAAa,EAAAkB,QAAA,KAAKpB,SAAS;IAAEqB,KAAK,EAAEtC,QAAQ,CAACG,MAAM,CAACoC,IAAI,EAAE/B,SAAS,CAAE;IAAAgC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAC3Ef,KAAK,EACN/B,KAAA,CAAAsC,aAAA,CAACS,SAAS,EAAAR,QAAA;IAACS,WAAW;IAACC,mBAAmB;IAACC,UAAU,EAAE,KAAM;IAACC,WAAW,EAAE,KAAM;IAACC,YAAY,EAAE,KAAM;IAACC,eAAe,EAAC,OAAO;IAACC,cAAc,EAAC,YAAY;IAACC,qBAAqB,EAAC,aAAa;IAACC,SAAS,EAAEvC;EAAU,GAAKM,IAAI;IAAET,KAAK,EAAEA,KAAM;IAACF,MAAM,EAAEiB,YAAa;IAAChB,OAAO,EAAEiB,aAAc;IAACU,KAAK,EAAEtC,QAAQ,CAACG,MAAM,CAACoD,SAAS,EAAE9C,cAAc,CAAE;IAACF,GAAG,EAAEA,GAAI;IAAAiC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAC,CAC3U,CAAC;AACpB,CAAC;AACD,eAAe7C,UAAU,CAACM,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}