{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\components\\\\atoms\\\\Button.tsx\";\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppText from \"./AppText\";\nimport layout from \"../../styles/layout\";\nimport colors from \"../../styles/colors\";\nvar Button = function Button(_ref) {\n  var text = _ref.text,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress,\n    stretch = _ref.stretch,\n    isValidate = _ref.isValidate,\n    isLoading = _ref.isLoading,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    isChecked = _ref.isChecked;\n  return React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      backgroundColor: isSelected ? colors.primary : colors.greyLight,\n      alignSelf: stretch ? 'stretch' : 'center',\n      marginVertical: isValidate ? layout.padding : layout.padding / 3\n    }, style],\n    disabled: disabled,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    animating: isLoading,\n    color: colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }) : React.createElement(AppText, {\n    color: isSelected ? colors.white : colors.black,\n    text: text,\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Button;\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: layout.buttons.borderRadius,\n    paddingHorizontal: layout.padding,\n    paddingVertical: layout.padding / 2,\n    marginHorizontal: layout.padding\n  },\n  text: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","ActivityIndicator","StyleSheet","TouchableOpacity","AppText","layout","colors","Button","_ref","text","isSelected","onPress","stretch","isValidate","isLoading","style","disabled","isChecked","createElement","styles","button","backgroundColor","primary","greyLight","alignSelf","marginVertical","padding","__source","fileName","_jsxFileName","lineNumber","columnNumber","animating","color","white","black","create","borderRadius","buttons","paddingHorizontal","paddingVertical","marginHorizontal","textAlign"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/components/atoms/Button.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\r\nimport BsCheckLg from \"react-icons/bs\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport AppText from '@components/atoms/AppText';\r\n\r\nimport layout from '@styles/layout';\r\nimport colors from '@styles/colors';\r\n\r\ntype Props = {\r\n  text: string;\r\n  isSelected?: boolean;\r\n  onPress: () => void;\r\n  stretch?: boolean;\r\n  isValidate?: boolean;\r\n  isLoading?: boolean;\r\n  style?: ViewStyle;\r\n  disabled?: boolean;\r\n  isChecked?: boolean;\r\n};\r\n\r\nconst Button = ({\r\n  text,\r\n  isSelected,\r\n  onPress,\r\n  stretch,\r\n  isValidate,\r\n  isLoading,\r\n  style,\r\n  disabled,\r\n  isChecked,\r\n}: Props): ReactElement => (\r\n  <TouchableOpacity\r\n    style={[\r\n      styles.button,\r\n      {\r\n        backgroundColor: isSelected ? colors.primary : colors.greyLight,\r\n        alignSelf: stretch ? 'stretch' : 'center',\r\n        marginVertical: isValidate ? layout.padding : layout.padding / 3,\r\n      },\r\n      style,\r\n    ]}\r\n    disabled={disabled}\r\n    onPress={onPress}\r\n  >\r\n    {isLoading ? (\r\n      <ActivityIndicator animating={isLoading} color={colors.primary} />\r\n    ) : (\r\n      \r\n      <AppText\r\n        color={isSelected ? colors.white : colors.black}\r\n        text={text}\r\n        style={styles.text}\r\n      />\r\n    )}\r\n  </TouchableOpacity>\r\n);\r\n\r\nexport default Button;\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: layout.buttons.borderRadius,\r\n    paddingHorizontal: layout.padding,\r\n    paddingVertical: layout.padding / 2,\r\n    marginHorizontal: layout.padding,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAwB,OAAO;AAAC,OAAAC,iBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAS5C,OAAOC,OAAO;AAEd,OAAOC,MAAM;AACb,OAAOC,MAAM;AAcb,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA;EAAA,IACVC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IACVC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IACPC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IACPC,UAAU,GAAAL,IAAA,CAAVK,UAAU;IACVC,SAAS,GAAAN,IAAA,CAATM,SAAS;IACTC,KAAK,GAAAP,IAAA,CAALO,KAAK;IACLC,QAAQ,GAAAR,IAAA,CAARQ,QAAQ;IACRC,SAAS,GAAAT,IAAA,CAATS,SAAS;EAAA,OAETjB,KAAA,CAAAkB,aAAA,CAACf,gBAAgB;IACfY,KAAK,EAAE,CACLI,MAAM,CAACC,MAAM,EACb;MACEC,eAAe,EAAEX,UAAU,GAAGJ,MAAM,CAACgB,OAAO,GAAGhB,MAAM,CAACiB,SAAS;MAC/DC,SAAS,EAAEZ,OAAO,GAAG,SAAS,GAAG,QAAQ;MACzCa,cAAc,EAAEZ,UAAU,GAAGR,MAAM,CAACqB,OAAO,GAAGrB,MAAM,CAACqB,OAAO,GAAG;IACjE,CAAC,EACDX,KAAK,CACL;IACFC,QAAQ,EAAEA,QAAS;IACnBL,OAAO,EAAEA,OAAQ;IAAAgB,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhBjB,SAAS,GACRd,KAAA,CAAAkB,aAAA,CAACjB,iBAAiB;IAAC+B,SAAS,EAAElB,SAAU;IAACmB,KAAK,EAAE3B,MAAM,CAACgB,OAAQ;IAAAK,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,GAGlE/B,KAAA,CAAAkB,aAAA,CAACd,OAAO;IACN6B,KAAK,EAAEvB,UAAU,GAAGJ,MAAM,CAAC4B,KAAK,GAAG5B,MAAM,CAAC6B,KAAM;IAChD1B,IAAI,EAAEA,IAAK;IACXM,KAAK,EAAEI,MAAM,CAACV,IAAK;IAAAkB,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpB,CAEa,CAAC;AAAA,CACpB;AAED,eAAexB,MAAM;AAErB,IAAMY,MAAM,GAAGjB,UAAU,CAACkC,MAAM,CAAC;EAC/BhB,MAAM,EAAE;IACNiB,YAAY,EAAEhC,MAAM,CAACiC,OAAO,CAACD,YAAY;IACzCE,iBAAiB,EAAElC,MAAM,CAACqB,OAAO;IACjCc,eAAe,EAAEnC,MAAM,CAACqB,OAAO,GAAG,CAAC;IACnCe,gBAAgB,EAAEpC,MAAM,CAACqB;EAC3B,CAAC;EACDjB,IAAI,EAAE;IACJiC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}