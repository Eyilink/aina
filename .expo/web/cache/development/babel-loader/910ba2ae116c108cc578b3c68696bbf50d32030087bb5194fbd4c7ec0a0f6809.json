{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\History.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"../../components/molecules/Container\";\nimport AppText from \"../../components/atoms/AppText\";\nimport { useReportsStore } from \"../../store/store\";\nimport layout from \"../../styles/layout\";\nimport fonts from \"../../styles/fonts\";\nimport { MALADIE1 } from \"../../constants/constants\";\nimport BoxHistorique from \"../../components/atoms/BoxHistorique\";\nvar History = function History(_ref) {\n  var navigation = _ref.navigation,\n    objets = _ref.objets;\n  var _useReportsStore = useReportsStore({\n      disease: MALADIE1\n    }),\n    _useReportsStore2 = _slicedToArray(_useReportsStore, 1),\n    reports = _useReportsStore2[0];\n  var _useState = useState('list'),\n    _useState2 = _slicedToArray(_useState, 2),\n    reportType = _useState2[0],\n    setReportType = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isChartFocused = _useState4[0],\n    setIsChartFocused = _useState4[1];\n  var exemple = {\n    nom: 'Articulaire',\n    date: \"15/01/2023\",\n    more: \"Coude - Gauhe\",\n    namelogo: \"picture\"\n  };\n  var exempleList = [{\n    nom: 'Articulaire',\n    date: \"15/01/2023\",\n    more: \"Coude - Gauhe\",\n    namelogo: \"picture\"\n  }, {\n    nom: 'Artie',\n    date: \"15/01/2023\",\n    more: \"Coude - Gauhe\",\n    namelogo: \"picture\"\n  }, {\n    nom: 'Articaire',\n    date: \"15/01/2023\",\n    more: \"Coude - Gau\",\n    namelogo: \"picture\"\n  }];\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      setIsChartFocused(true);\n    });\n    return unsubscribe;\n  }, [navigation]);\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('blur', function () {\n      setIsChartFocused(false);\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var onPressList = function onPressList() {\n    setIsChartFocused(false);\n    setReportType('list');\n  };\n  var onPressChart = function onPressChart() {\n    setIsChartFocused(true);\n    setReportType('chart');\n  };\n  return React.createElement(Container, {\n    noMarginBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(AppText, {\n    text: \"Historique\",\n    style: styles.pagetitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(BoxHistorique, {\n    objet: exemple,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, exempleList.map(function (object, index) {\n    React.createElement(BoxHistorique, {\n      objet: object,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    });\n  })));\n};\nexport default History;\nvar styles = StyleSheet.create({\n  pagetitle: {\n    fontSize: 24,\n    marginBottom: 20,\n    marginLeft: 5\n  },\n  container: {},\n  subtitle: {\n    marginTop: layout.padding,\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    marginHorizontal: layout.padding\n  },\n  button: {\n    flex: 1,\n    paddingHorizontal: layout.padding,\n    paddingVertical: layout.padding / 6,\n    marginBottom: layout.padding,\n    alignItems: 'center'\n  },\n  buttonList: {\n    borderTopLeftRadius: layout.buttons.borderRadius,\n    borderBottomLeftRadius: layout.buttons.borderRadius\n  },\n  buttonCharts: {\n    borderTopRightRadius: layout.buttons.borderRadius,\n    borderBottomRightRadius: layout.buttons.borderRadius\n  },\n  textButtons: {\n    textAlign: 'center',\n    fontFamily: fonts.label.fontFamily,\n    fontSize: fonts.label.fontSize,\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Container","AppText","useReportsStore","layout","fonts","MALADIE1","BoxHistorique","History","_ref","navigation","objets","_useReportsStore","disease","_useReportsStore2","_slicedToArray","reports","_useState","_useState2","reportType","setReportType","_useState3","_useState4","isChartFocused","setIsChartFocused","exemple","nom","date","more","namelogo","exempleList","unsubscribe","addListener","onPressList","onPressChart","createElement","noMarginBottom","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","style","styles","pagetitle","objet","map","object","index","create","fontSize","marginBottom","marginLeft","container","subtitle","marginTop","padding","textAlign","buttonsContainer","flexDirection","marginHorizontal","button","flex","paddingHorizontal","paddingVertical","alignItems","buttonList","borderTopLeftRadius","buttons","borderRadius","borderBottomLeftRadius","buttonCharts","borderTopRightRadius","borderBottomRightRadius","textButtons","fontFamily","label"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/screens/Authenticated/History.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport HistoryTimeline from '@components/molecules/HistoryTimeline';\r\nimport HistoryCharts from '@components/molecules/HistoryCharts';\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport Subtitle from '@components/atoms/SubTitle';\r\nimport Button from '@components/atoms/Button';\r\nimport AppText from '@components/atoms/AppText';\r\n\r\nimport { BottomTabParamList } from '@navigation/types';\r\nimport { useReportsStore } from '@store/store';\r\n\r\nimport layout from '@styles/layout';\r\nimport i18n from '@i18n/i18n';\r\nimport fonts from '@styles/fonts';\r\nimport colors from '@styles/colors';\r\nimport { MALADIE1 } from '@constants/constants';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nimport BoxHistorique from '@components/atoms/BoxHistorique';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<BottomTabParamList, 'History'>;\r\n  objets: Pathologie[ ];\r\n};\r\n\r\n\r\ntype Pathologie = {\r\n  nom: string;\r\n  date: string;\r\n  more: string;\r\n  namelogo: string;\r\n}\r\n\r\nconst History = ({ navigation , objets }: Props): ReactElement => {\r\n  const [reports] = useReportsStore({ disease: MALADIE1 });\r\n  const [reportType, setReportType] = useState<string>('list');\r\n  const [isChartFocused, setIsChartFocused] = useState<boolean>(false);\r\n\r\n  const exemple: Pathologie = { nom: 'Articulaire',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" };\r\n\r\n  const exempleList: Pathologie[] = [\r\n    { nom: 'Articulaire',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" },\r\n    { nom: 'Artie',date:\"15/01/2023\", more:\"Coude - Gauhe\",namelogo:\"picture\" },\r\n    { nom: 'Articaire',date:\"15/01/2023\", more:\"Coude - Gau\",namelogo:\"picture\" },\r\n    ]\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      setIsChartFocused(true);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = navigation.addListener('blur', () => {\r\n      setIsChartFocused(false);\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  const onPressList = (): void => {\r\n    setIsChartFocused(false);\r\n    setReportType('list');\r\n  };\r\n\r\n  const onPressChart = (): void => {\r\n    setIsChartFocused(true);\r\n    setReportType('chart');\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Container noMarginBottom>\r\n      <AppText text={\"Historique\"} style={styles.pagetitle} />\r\n      <BoxHistorique objet={exemple}/>\r\n      <View>\r\n      {exempleList.map((object, index) => {(\r\n                <BoxHistorique objet={object}/>\r\n            )})}\r\n       </View>\r\n        {/* <Title isPrimary text={i18n.t('navigation.authenticated.history')} />\r\n        {!reports ? (\r\n          <>\r\n            <Subtitle\r\n              text={i18n.t('history.firstTime')}\r\n              style={styles.subtitle}\r\n            />\r\n            <Button\r\n              text={i18n.t('navigation.authenticated.evaluate')}\r\n              onPress={(): void => navigation.navigate('Evaluate')}\r\n              isValidate\r\n              stretch\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <View style={styles.buttonsContainer}>\r\n              <TouchableOpacity\r\n                onPress={onPressList}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonList,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'list' ? colors.primary : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"list\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'list' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'list' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.list')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={onPressChart}\r\n                style={[\r\n                  styles.button,\r\n                  styles.buttonCharts,\r\n                  {\r\n                    backgroundColor:\r\n                      reportType === 'chart'\r\n                        ? colors.primary\r\n                        : colors.greyLight,\r\n                  },\r\n                ]}\r\n              >\r\n                <Feather\r\n                  name=\"bar-chart-2\"\r\n                  size={layout.navigation.tabIconSize}\r\n                  color={reportType === 'chart' ? colors.white : colors.black}\r\n                />\r\n                <Text\r\n                  style={[\r\n                    styles.textButtons,\r\n                    {\r\n                      color:\r\n                        reportType === 'chart' ? colors.white : colors.black,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {i18n.t('history.chart')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {reportType === 'list' ? (\r\n              <HistoryTimeline reports={reports} />\r\n            ) : (\r\n              <ScrollView persistentScrollbar>\r\n                <HistoryCharts reports={reports} isFocused={isChartFocused} />\r\n              </ScrollView>\r\n            )}\r\n          </>\r\n        )} */}\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n\r\nconst styles = StyleSheet.create({\r\n  pagetitle :{\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n    marginLeft: 5,\r\n\r\n  },\r\n  container: {\r\n    //flex: 1,\r\n    //paddingTop: layout.padding,\r\n  },\r\n  subtitle: {\r\n    marginTop: layout.padding,\r\n    textAlign: 'center',\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: layout.padding,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    paddingHorizontal: layout.padding,\r\n    paddingVertical: layout.padding / 6,\r\n    marginBottom: layout.padding,\r\n    alignItems: 'center',\r\n  },\r\n  buttonList: {\r\n    borderTopLeftRadius: layout.buttons.borderRadius,\r\n    borderBottomLeftRadius: layout.buttons.borderRadius,\r\n  },\r\n  buttonCharts: {\r\n    borderTopRightRadius: layout.buttons.borderRadius,\r\n    borderBottomRightRadius: layout.buttons.borderRadius,\r\n  },\r\n  textButtons: {\r\n    textAlign: 'center',\r\n    fontFamily: fonts.label.fontFamily,\r\n    fontSize: fonts.label.fontSize,\r\n    marginTop: 4,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}