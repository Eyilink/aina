{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform, UnavailabilityError } from '@unimodules/core';\nimport { DeviceType } from \"./Device.types\";\nimport ExpoDevice from \"./ExpoDevice\";\nimport { getIosModelName } from \"./ModelNames\";\nexport { DeviceType };\nexport var isDevice = ExpoDevice ? ExpoDevice.isDevice : true;\nexport var brand = ExpoDevice ? ExpoDevice.brand : null;\nexport var manufacturer = ExpoDevice ? ExpoDevice.manufacturer : null;\nexport var modelId = ExpoDevice ? ExpoDevice.modelId || null : null;\nexport var modelName = ExpoDevice ? Platform.OS === 'ios' && ExpoDevice.modelId ? getIosModelName(ExpoDevice.modelId) : ExpoDevice.modelName : null;\nexport var designName = ExpoDevice ? ExpoDevice.designName || null : null;\nexport var productName = ExpoDevice ? ExpoDevice.productName || null : null;\nexport var deviceYearClass = ExpoDevice ? ExpoDevice.deviceYearClass : null;\nexport var totalMemory = ExpoDevice ? ExpoDevice.totalMemory : null;\nexport var supportedCpuArchitectures = ExpoDevice ? ExpoDevice.supportedCpuArchitectures : null;\nexport var osName = ExpoDevice ? ExpoDevice.osName : null;\nexport var osVersion = ExpoDevice ? ExpoDevice.osVersion : null;\nexport var osBuildId = ExpoDevice ? ExpoDevice.osBuildId : null;\nexport var osInternalBuildId = ExpoDevice ? ExpoDevice.osInternalBuildId : null;\nexport var osBuildFingerprint = ExpoDevice ? ExpoDevice.osBuildFingerprint || null : null;\nexport var platformApiLevel = ExpoDevice ? ExpoDevice.platformApiLevel || null : null;\nexport var deviceName = ExpoDevice ? ExpoDevice.deviceName : null;\nexport function getDeviceTypeAsync() {\n  return _regeneratorRuntime.async(function getDeviceTypeAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExpoDevice.getDeviceTypeAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.getDeviceTypeAsync());\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getUptimeAsync() {\n  return _regeneratorRuntime.async(function getUptimeAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (ExpoDevice.getUptimeAsync) {\n            _context2.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-device', 'getUptimeAsync');\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.getUptimeAsync());\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMaxMemoryAsync() {\n  var maxMemory;\n  return _regeneratorRuntime.async(function getMaxMemoryAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (ExpoDevice.getMaxMemoryAsync) {\n            _context3.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n        case 2:\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.getMaxMemoryAsync());\n        case 4:\n          maxMemory = _context3.sent;\n          if (maxMemory === -1) {\n            maxMemory = Number.MAX_SAFE_INTEGER;\n          }\n          return _context3.abrupt(\"return\", maxMemory);\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isRootedExperimentalAsync() {\n  return _regeneratorRuntime.async(function isRootedExperimentalAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExpoDevice.isRootedExperimentalAsync) {\n            _context4.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n        case 2:\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.isRootedExperimentalAsync());\n        case 4:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSideLoadingEnabledAsync() {\n  return _regeneratorRuntime.async(function isSideLoadingEnabledAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (ExpoDevice.isSideLoadingEnabledAsync) {\n            _context5.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n        case 2:\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.isSideLoadingEnabledAsync());\n        case 4:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getPlatformFeaturesAsync() {\n  return _regeneratorRuntime.async(function getPlatformFeaturesAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (ExpoDevice.getPlatformFeaturesAsync) {\n            _context6.next = 2;\n            break;\n          }\n          return _context6.abrupt(\"return\", []);\n        case 2:\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.getPlatformFeaturesAsync());\n        case 4:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function hasPlatformFeatureAsync(feature) {\n  return _regeneratorRuntime.async(function hasPlatformFeatureAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (ExpoDevice.hasPlatformFeatureAsync) {\n            _context7.next = 2;\n            break;\n          }\n          return _context7.abrupt(\"return\", false);\n        case 2:\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(ExpoDevice.hasPlatformFeatureAsync(feature));\n        case 4:\n          return _context7.abrupt(\"return\", _context7.sent);\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["Platform","UnavailabilityError","DeviceType","ExpoDevice","getIosModelName","isDevice","brand","manufacturer","modelId","modelName","OS","designName","productName","deviceYearClass","totalMemory","supportedCpuArchitectures","osName","osVersion","osBuildId","osInternalBuildId","osBuildFingerprint","platformApiLevel","deviceName","getDeviceTypeAsync","_regeneratorRuntime","async","getDeviceTypeAsync$","_context","prev","next","awrap","abrupt","sent","stop","Promise","getUptimeAsync","getUptimeAsync$","_context2","getMaxMemoryAsync","maxMemory","getMaxMemoryAsync$","_context3","Number","MAX_SAFE_INTEGER","isRootedExperimentalAsync","isRootedExperimentalAsync$","_context4","isSideLoadingEnabledAsync","isSideLoadingEnabledAsync$","_context5","getPlatformFeaturesAsync","getPlatformFeaturesAsync$","_context6","hasPlatformFeatureAsync","feature","hasPlatformFeatureAsync$","_context7"],"sources":["C:\\Users\\HP\\Documents\\Ping\\pingaina\\node_modules\\expo-device\\src\\Device.ts"],"sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\n\nimport { DeviceType } from './Device.types';\nimport ExpoDevice from './ExpoDevice';\nimport { getIosModelName } from './ModelNames';\n\nexport { DeviceType };\n\nexport const isDevice: boolean = ExpoDevice ? ExpoDevice.isDevice : true;\nexport const brand: string | null = ExpoDevice ? ExpoDevice.brand : null;\nexport const manufacturer: string | null = ExpoDevice ? ExpoDevice.manufacturer : null;\nexport const modelId = ExpoDevice ? ExpoDevice.modelId || null : null;\nexport const modelName: string | null = ExpoDevice\n  ? Platform.OS === 'ios' && ExpoDevice.modelId\n    ? getIosModelName(ExpoDevice.modelId)\n    : ExpoDevice.modelName\n  : null;\nexport const designName: string | null = ExpoDevice ? ExpoDevice.designName || null : null;\nexport const productName: string | null = ExpoDevice ? ExpoDevice.productName || null : null;\nexport const deviceYearClass: number | null = ExpoDevice ? ExpoDevice.deviceYearClass : null;\nexport const totalMemory: number | null = ExpoDevice ? ExpoDevice.totalMemory : null;\nexport const supportedCpuArchitectures: string[] | null = ExpoDevice\n  ? ExpoDevice.supportedCpuArchitectures\n  : null;\nexport const osName: string | null = ExpoDevice ? ExpoDevice.osName : null;\nexport const osVersion: string | null = ExpoDevice ? ExpoDevice.osVersion : null;\nexport const osBuildId: string | null = ExpoDevice ? ExpoDevice.osBuildId : null;\nexport const osInternalBuildId: string | null = ExpoDevice ? ExpoDevice.osInternalBuildId : null;\nexport const osBuildFingerprint: string | null = ExpoDevice\n  ? ExpoDevice.osBuildFingerprint || null\n  : null;\nexport const platformApiLevel: number | null = ExpoDevice\n  ? ExpoDevice.platformApiLevel || null\n  : null;\nexport const deviceName: string | null = ExpoDevice ? ExpoDevice.deviceName : null;\n\nexport async function getDeviceTypeAsync(): Promise<DeviceType> {\n  if (!ExpoDevice.getDeviceTypeAsync) {\n    throw new UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n  }\n  return await ExpoDevice.getDeviceTypeAsync();\n}\n\nexport async function getUptimeAsync(): Promise<number> {\n  if (!ExpoDevice.getUptimeAsync) {\n    throw new UnavailabilityError('expo-device', 'getUptimeAsync');\n  }\n  return await ExpoDevice.getUptimeAsync();\n}\n\nexport async function getMaxMemoryAsync(): Promise<number> {\n  if (!ExpoDevice.getMaxMemoryAsync) {\n    throw new UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n  }\n  let maxMemory = await ExpoDevice.getMaxMemoryAsync();\n  if (maxMemory === -1) {\n    maxMemory = Number.MAX_SAFE_INTEGER;\n  }\n  return maxMemory;\n}\n\nexport async function isRootedExperimentalAsync(): Promise<boolean> {\n  if (!ExpoDevice.isRootedExperimentalAsync) {\n    throw new UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n  }\n  return await ExpoDevice.isRootedExperimentalAsync();\n}\n\nexport async function isSideLoadingEnabledAsync(): Promise<boolean> {\n  if (!ExpoDevice.isSideLoadingEnabledAsync) {\n    throw new UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n  }\n  return await ExpoDevice.isSideLoadingEnabledAsync();\n}\n\nexport async function getPlatformFeaturesAsync(): Promise<string[]> {\n  if (!ExpoDevice.getPlatformFeaturesAsync) {\n    return [];\n  }\n  return await ExpoDevice.getPlatformFeaturesAsync();\n}\n\nexport async function hasPlatformFeatureAsync(feature: string): Promise<boolean> {\n  if (!ExpoDevice.hasPlatformFeatureAsync) {\n    return false;\n  }\n  return await ExpoDevice.hasPlatformFeatureAsync(feature);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}