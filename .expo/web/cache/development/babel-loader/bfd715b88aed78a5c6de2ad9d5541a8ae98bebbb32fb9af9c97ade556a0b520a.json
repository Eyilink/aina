{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hibab\\\\Downloads\\\\aina19\\\\pingaina\\\\src\\\\screens\\\\Authenticated\\\\Report\\\\Temperature.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"../../../components/molecules/Container\";\nimport Title from \"../../../components/atoms/Title\";\nimport SubTitle from \"../../../components/atoms/SubTitle\";\nimport Button from \"../../../components/atoms/Button\";\nimport Previous from \"../../../components/atoms/Previous\";\nimport Slider from \"../../../components/molecules/Slider\";\nimport { alertError } from \"../../../helpers/utils\";\nimport layout from \"../../../styles/layout\";\nimport i18n from \"../../../i18n/i18n\";\nimport { DATE_TODAY } from \"../../../constants/constants\";\nvar Temperature = function Temperature(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    choice = _useState2[0],\n    setChoice = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    temperature = _useState4[0],\n    setTemperature = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSliderVisible = _useState6[0],\n    setIsSliderVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasUserChosen = _useState8[0],\n    setHasUserChosen = _useState8[1];\n  var onValidate = function onValidate() {\n    return _regeneratorRuntime.async(function onValidate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!hasUserChosen) alertError({});else {\n              navigation.navigate('Symptoms', {\n                report: {\n                  fever: choice,\n                  temperature: temperature\n                }\n              });\n            }\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var onCancelSlider = function onCancelSlider() {\n    setIsSliderVisible(false);\n    if (!temperature) setHasUserChosen(false);\n  };\n  var onConfirmTemperature = function onConfirmTemperature(temperature) {\n    setIsSliderVisible(false);\n    setTemperature(temperature);\n  };\n  var onPressYes = function onPressYes() {\n    setHasUserChosen(true);\n    setChoice(true);\n    setIsSliderVisible(true);\n  };\n  var onPressNo = function onPressNo() {\n    setHasUserChosen(true);\n    setChoice(false);\n    setTemperature(null);\n  };\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Previous, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Title, {\n    isPrimary: true,\n    isDate: true,\n    isCenter: true,\n    text: DATE_TODAY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(SubTitle, {\n    isBold: true,\n    isCenter: true,\n    text: i18n.t('report.temperature'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(SubTitle, {\n    isCenter: true,\n    text: i18n.t('report.temperatureFeeling'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: temperature ? i18n.t('commons.yes') + \" : \" + temperature + \" \" + i18n.t('commons.units.degrees') : i18n.t('commons.yes'),\n    onPress: onPressYes,\n    isSelected: hasUserChosen ? choice : false,\n    stretch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: i18n.t('commons.no'),\n    onPress: onPressNo,\n    isSelected: hasUserChosen ? !choice : false,\n    stretch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: i18n.t('signup.validate'),\n    onPress: onValidate,\n    isValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), React.createElement(Slider, {\n    isVisible: isSliderVisible,\n    onConfirm: onConfirmTemperature,\n    onCancel: onCancelSlider,\n    step: 0.1,\n    initialValue: 37,\n    min: 37,\n    max: 40,\n    type: \"temperature\",\n    title: i18n.t('report.temperatureFeeling'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Temperature;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingBottom: layout.padding\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","Container","Title","SubTitle","Button","Previous","Slider","alertError","layout","i18n","DATE_TODAY","Temperature","_ref","navigation","_useState","_useState2","_slicedToArray","choice","setChoice","_useState3","_useState4","temperature","setTemperature","_useState5","_useState6","isSliderVisible","setIsSliderVisible","_useState7","_useState8","hasUserChosen","setHasUserChosen","onValidate","_regeneratorRuntime","async","onValidate$","_context","prev","next","navigate","report","fever","stop","Promise","onCancelSlider","onConfirmTemperature","onPressYes","onPressNo","createElement","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","isPrimary","isDate","isCenter","text","isBold","t","onPress","isSelected","stretch","isValidate","isVisible","onConfirm","onCancel","step","initialValue","min","max","type","title","create","flex","paddingBottom","padding"],"sources":["C:/Users/hibab/Downloads/aina19/pingaina/src/screens/Authenticated/Report/Temperature.tsx"],"sourcesContent":["import React, { ReactElement, useState } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n\r\nimport Container from '@components/molecules/Container';\r\nimport Title from '@components/atoms/Title';\r\nimport SubTitle from '@components/atoms/SubTitle';\r\nimport Button from '@components/atoms/Button';\r\nimport Previous from '@components/atoms/Previous';\r\nimport Slider from '@components/molecules/Slider';\r\n\r\nimport { AuthenticatedStackParamList } from '@navigation/types';\r\nimport { alertError } from '@helpers/utils';\r\n\r\nimport layout from '@styles/layout';\r\nimport i18n from '@i18n/i18n';\r\nimport { DATE_TODAY } from '@constants/constants';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<AuthenticatedStackParamList, 'Temperature'>;\r\n};\r\n\r\nconst Temperature = ({ navigation }: Props): ReactElement => {\r\n  const [choice, setChoice] = useState<boolean>(false);\r\n  const [temperature, setTemperature] = useState<number | null>(null);\r\n  const [isSliderVisible, setIsSliderVisible] = useState<boolean>(false);\r\n  const [hasUserChosen, setHasUserChosen] = useState<boolean>(false);\r\n\r\n  const onValidate = async (): Promise<void> => {\r\n    if (!hasUserChosen) alertError({});\r\n    else {\r\n      navigation.navigate('Symptoms', {\r\n        report: { fever: choice, temperature },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCancelSlider = (): void => {\r\n    setIsSliderVisible(false);\r\n    if (!temperature) setHasUserChosen(false);\r\n  };\r\n\r\n  const onConfirmTemperature = (temperature: number): void => {\r\n    setIsSliderVisible(false);\r\n    setTemperature(temperature);\r\n  };\r\n\r\n  const onPressYes = (): void => {\r\n    setHasUserChosen(true);\r\n    setChoice(true);\r\n    setIsSliderVisible(true);\r\n  };\r\n\r\n  const onPressNo = (): void => {\r\n    setHasUserChosen(true);\r\n    setChoice(false);\r\n    setTemperature(null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <View style={styles.container}>\r\n        <Previous />\r\n        <Title isPrimary isDate isCenter text={DATE_TODAY} />\r\n        <SubTitle isBold isCenter text={i18n.t('report.temperature')} />\r\n        <SubTitle isCenter text={i18n.t('report.temperatureFeeling')} />\r\n        <Button\r\n          text={\r\n            temperature\r\n              ? `${i18n.t('commons.yes')} : ${temperature} ${i18n.t(\r\n                  'commons.units.degrees',\r\n                )}`\r\n              : i18n.t('commons.yes')\r\n          }\r\n          onPress={onPressYes}\r\n          isSelected={hasUserChosen ? choice : false}\r\n          stretch\r\n        />\r\n        <Button\r\n          text={i18n.t('commons.no')}\r\n          onPress={onPressNo}\r\n          isSelected={hasUserChosen ? !choice : false}\r\n          stretch\r\n        />\r\n        <Button\r\n          text={i18n.t('signup.validate')}\r\n          onPress={onValidate}\r\n          isValidate\r\n        />\r\n      </View>\r\n      <Slider\r\n        isVisible={isSliderVisible}\r\n        onConfirm={onConfirmTemperature}\r\n        onCancel={onCancelSlider}\r\n        step={0.1}\r\n        initialValue={37}\r\n        min={37}\r\n        max={40}\r\n        type=\"temperature\"\r\n        title={i18n.t('report.temperatureFeeling')}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingBottom: layout.padding,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}