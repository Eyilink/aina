{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport TabBarIcon from \"./TabBarIcon\";\nexport default function BottomTabBarItem(_ref2) {\n  var focused = _ref2.focused,\n    route = _ref2.route,\n    label = _ref2.label,\n    icon = _ref2.icon,\n    _ref2$button = _ref2.button,\n    button = _ref2$button === void 0 ? function (_ref) {\n      var children = _ref.children,\n        style = _ref.style,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"style\"]);\n      return React.createElement(TouchableWithoutFeedback, rest, React.createElement(View, {\n        style: style\n      }, children));\n    } : _ref2$button,\n    accessibilityLabel = _ref2.accessibilityLabel,\n    testID = _ref2.testID,\n    onPress = _ref2.onPress,\n    onLongPress = _ref2.onLongPress,\n    horizontal = _ref2.horizontal,\n    customActiveTintColor = _ref2.activeTintColor,\n    customInactiveTintColor = _ref2.inactiveTintColor,\n    _ref2$activeBackgroun = _ref2.activeBackgroundColor,\n    activeBackgroundColor = _ref2$activeBackgroun === void 0 ? 'transparent' : _ref2$activeBackgroun,\n    _ref2$inactiveBackgro = _ref2.inactiveBackgroundColor,\n    inactiveBackgroundColor = _ref2$inactiveBackgro === void 0 ? 'transparent' : _ref2$inactiveBackgro,\n    _ref2$showLabel = _ref2.showLabel,\n    showLabel = _ref2$showLabel === void 0 ? true : _ref2$showLabel,\n    _ref2$showIcon = _ref2.showIcon,\n    showIcon = _ref2$showIcon === void 0 ? true : _ref2$showIcon,\n    allowFontScaling = _ref2.allowFontScaling,\n    labelStyle = _ref2.labelStyle,\n    style = _ref2.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n    if (showLabel === false) {\n      return null;\n    }\n    var color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return React.createElement(Animated.Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    if (typeof label === 'string') {\n      return label;\n    }\n    return label({\n      focused: focused,\n      color: color\n    });\n  };\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n    if (showIcon === false || icon === undefined) {\n      return null;\n    }\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return React.createElement(TabBarIcon, {\n      route: route,\n      size: horizontal ? 17 : 24,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: horizontal ? styles.iconHorizontal : styles.iconVertical\n    });\n  };\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconVertical: {\n    flex: 1\n  },\n  iconHorizontal: {\n    height: '100%'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  }\n});","map":{"version":3,"names":["React","View","TouchableWithoutFeedback","Animated","StyleSheet","useTheme","Color","TabBarIcon","BottomTabBarItem","_ref2","focused","route","label","icon","_ref2$button","button","_ref","children","style","rest","_objectWithoutProperties","createElement","accessibilityLabel","testID","onPress","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","_ref2$activeBackgroun","activeBackgroundColor","_ref2$inactiveBackgro","inactiveBackgroundColor","_ref2$showLabel","showLabel","_ref2$showIcon","showIcon","allowFontScaling","labelStyle","_useTheme","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","Text","numberOfLines","styles","labelBeside","labelBeneath","renderIcon","_ref4","activeOpacity","inactiveOpacity","size","iconHorizontal","iconVertical","scene","backgroundColor","accessibilityRole","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","create","flex","alignItems","justifyContent","flexDirection","height","textAlign","fontSize","marginBottom","marginLeft"],"sources":["C:\\Users\\hibab\\Downloads\\aina19\\pingaina\\node_modules\\@react-navigation\\bottom-tabs\\lib\\module\\views\\BottomTabItem.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  TouchableWithoutFeedback,\n  Animated,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport { BottomTabBarButtonProps } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: () => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to show the icon for the tab.\n   */\n  showIcon?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  button = ({ children, style, ...rest }: BottomTabBarButtonProps) => (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  ),\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  showIcon = true,\n  allowFontScaling,\n  labelStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'string') {\n      return label;\n    }\n\n    return label({ focused, color });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (showIcon === false || icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        size={horizontal ? 17 : 24}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={horizontal ? styles.iconHorizontal : styles.iconVertical}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}