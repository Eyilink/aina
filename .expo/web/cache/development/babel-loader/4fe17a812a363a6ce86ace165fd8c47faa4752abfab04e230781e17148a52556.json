{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ExponentWebBrowser from \"./ExpoWebBrowser\";\nimport { WebBrowserResultType } from \"./WebBrowser.types\";\nexport { WebBrowserResultType };\nvar emptyCustomTabsPackages = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: []\n};\nexport function getCustomTabsSupportingBrowsersAsync() {\n  return _regeneratorRuntime.async(function getCustomTabsSupportingBrowsersAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", emptyCustomTabsPackages);\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync());\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function warmUpAsync(browserPackage) {\n  return _regeneratorRuntime.async(function warmUpAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (ExponentWebBrowser.warmUpAsync) {\n            _context2.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context2.next = 6;\n            break;\n          }\n          return _context2.abrupt(\"return\", {});\n        case 6:\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.warmUpAsync(browserPackage));\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function mayInitWithUrlAsync(url, browserPackage) {\n  return _regeneratorRuntime.async(function mayInitWithUrlAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (ExponentWebBrowser.mayInitWithUrlAsync) {\n            _context3.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context3.next = 6;\n            break;\n          }\n          return _context3.abrupt(\"return\", {});\n        case 6:\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage));\n        case 8:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function coolDownAsync(browserPackage) {\n  return _regeneratorRuntime.async(function coolDownAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExponentWebBrowser.coolDownAsync) {\n            _context4.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n        case 2:\n          if (!(Platform.OS !== 'android')) {\n            _context4.next = 6;\n            break;\n          }\n          return _context4.abrupt(\"return\", {});\n        case 6:\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.coolDownAsync(browserPackage));\n        case 8:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function openBrowserAsync(url) {\n  var browserParams,\n    _args5 = arguments;\n  return _regeneratorRuntime.async(function openBrowserAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          browserParams = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n          if (ExponentWebBrowser.openBrowserAsync) {\n            _context5.next = 3;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n        case 3:\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(ExponentWebBrowser.openBrowserAsync(url, browserParams));\n        case 5:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function dismissBrowser() {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\nexport function openAuthSessionAsync(url, redirectUrl) {\n  var browserParams,\n    _args6 = arguments;\n  return _regeneratorRuntime.async(function openAuthSessionAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          browserParams = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};\n          if (!_authSessionIsNativelySupported()) {\n            _context6.next = 7;\n            break;\n          }\n          if (ExponentWebBrowser.openAuthSessionAsync) {\n            _context6.next = 4;\n            break;\n          }\n          throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n        case 4:\n          return _context6.abrupt(\"return\", ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl));\n        case 7:\n          return _context6.abrupt(\"return\", _openAuthSessionPolyfillAsync(url, redirectUrl, browserParams));\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function dismissAuthSession() {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\nexport function maybeCompleteAuthSession() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (ExponentWebBrowser.maybeCompleteAuthSession) {\n    return ExponentWebBrowser.maybeCompleteAuthSession(options);\n  }\n  return {\n    type: 'failed',\n    message: 'Not supported on this platform'\n  };\n}\nfunction _authSessionIsNativelySupported() {\n  if (Platform.OS === 'android') {\n    return false;\n  } else if (Platform.OS === 'web') {\n    return true;\n  }\n  var versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\nvar _redirectHandler = null;\nvar _onWebBrowserCloseAndroid = null;\nvar _isAppStateAvailable = AppState.currentState !== null;\nfunction _onAppStateChangeAndroid(state) {\n  if (!_isAppStateAvailable) {\n    _isAppStateAvailable = true;\n    return;\n  }\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\nfunction _openBrowserAndWaitAndroidAsync(startUrl) {\n  var browserParams,\n    appStateChangedToActive,\n    result,\n    _await$openBrowserAsy,\n    type,\n    _args7 = arguments;\n  return _regeneratorRuntime.async(function _openBrowserAndWaitAndroidAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          browserParams = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n          appStateChangedToActive = new Promise(function (resolve) {\n            _onWebBrowserCloseAndroid = resolve;\n            AppState.addEventListener('change', _onAppStateChangeAndroid);\n          });\n          result = {\n            type: 'cancel'\n          };\n          _context7.next = 5;\n          return _regeneratorRuntime.awrap(openBrowserAsync(startUrl, browserParams));\n        case 5:\n          _await$openBrowserAsy = _context7.sent;\n          type = _await$openBrowserAsy.type;\n          if (!(type === 'opened')) {\n            _context7.next = 11;\n            break;\n          }\n          _context7.next = 10;\n          return _regeneratorRuntime.awrap(appStateChangedToActive);\n        case 10:\n          result = {\n            type: 'dismiss'\n          };\n        case 11:\n          AppState.removeEventListener('change', _onAppStateChangeAndroid);\n          _onWebBrowserCloseAndroid = null;\n          return _context7.abrupt(\"return\", result);\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction _openAuthSessionPolyfillAsync(startUrl, returnUrl) {\n  var browserParams,\n    _args8 = arguments;\n  return _regeneratorRuntime.async(function _openAuthSessionPolyfillAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          browserParams = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {};\n          if (!_redirectHandler) {\n            _context8.next = 3;\n            break;\n          }\n          throw new Error(\"The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be\");\n        case 3:\n          if (!_onWebBrowserCloseAndroid) {\n            _context8.next = 5;\n            break;\n          }\n          throw new Error(\"WebBrowser is already open, only one can be open at a time\");\n        case 5:\n          _context8.prev = 5;\n          if (!(Platform.OS === 'android')) {\n            _context8.next = 12;\n            break;\n          }\n          _context8.next = 9;\n          return _regeneratorRuntime.awrap(Promise.race([_openBrowserAndWaitAndroidAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]));\n        case 9:\n          return _context8.abrupt(\"return\", _context8.sent);\n        case 12:\n          _context8.next = 14;\n          return _regeneratorRuntime.awrap(Promise.race([openBrowserAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]));\n        case 14:\n          return _context8.abrupt(\"return\", _context8.sent);\n        case 15:\n          _context8.prev = 15;\n          if (ExponentWebBrowser.dismissBrowser) {\n            ExponentWebBrowser.dismissBrowser();\n          }\n          _stopWaitingForRedirect();\n          return _context8.finish(15);\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[5,, 15, 19]], Promise);\n}\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\"The WebBrowser auth session is in an invalid state with no redirect handler when one should be set\");\n  }\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\nfunction _waitForRedirectAsync(returnUrl) {\n  return new Promise(function (resolve) {\n    _redirectHandler = function _redirectHandler(event) {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({\n          url: event.url,\n          type: 'success'\n        });\n      }\n    };\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}","map":{"version":3,"names":["UnavailabilityError","AppState","Linking","Platform","ExponentWebBrowser","WebBrowserResultType","emptyCustomTabsPackages","defaultBrowserPackage","undefined","preferredBrowserPackage","browserPackages","servicePackages","getCustomTabsSupportingBrowsersAsync","_regeneratorRuntime","async","getCustomTabsSupportingBrowsersAsync$","_context","prev","next","OS","abrupt","awrap","sent","stop","Promise","warmUpAsync","browserPackage","warmUpAsync$","_context2","mayInitWithUrlAsync","url","mayInitWithUrlAsync$","_context3","coolDownAsync","coolDownAsync$","_context4","openBrowserAsync","browserParams","_args5","arguments","openBrowserAsync$","_context5","length","dismissBrowser","openAuthSessionAsync","redirectUrl","_args6","openAuthSessionAsync$","_context6","_authSessionIsNativelySupported","_openAuthSessionPolyfillAsync","dismissAuthSession","maybeCompleteAuthSession","options","type","message","versionNumber","parseInt","String","Version","_redirectHandler","_onWebBrowserCloseAndroid","_isAppStateAvailable","currentState","_onAppStateChangeAndroid","state","_openBrowserAndWaitAndroidAsync","startUrl","appStateChangedToActive","result","_await$openBrowserAsy","_args7","_openBrowserAndWaitAndroidAsync$","_context7","resolve","addEventListener","removeEventListener","returnUrl","_args8","_openAuthSessionPolyfillAsync$","_context8","Error","race","_waitForRedirectAsync","_stopWaitingForRedirect","finish","event","startsWith"],"sources":["C:\\Users\\HP\\Documents\\Ping\\pingaina\\node_modules\\expo-web-browser\\src\\WebBrowser.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { AppState, Linking, Platform, AppStateStatus } from 'react-native';\n\nimport ExponentWebBrowser from './ExpoWebBrowser';\nimport {\n  RedirectEvent,\n  WebBrowserOpenOptions,\n  WebBrowserAuthSessionResult,\n  WebBrowserCustomTabsResults,\n  WebBrowserResult,\n  WebBrowserRedirectResult,\n  WebBrowserMayInitWithUrlResult,\n  WebBrowserWarmUpResult,\n  WebBrowserCoolDownResult,\n  WebBrowserResultType,\n} from './WebBrowser.types';\n\nexport {\n  WebBrowserOpenOptions,\n  WebBrowserAuthSessionResult,\n  WebBrowserCustomTabsResults,\n  WebBrowserResult,\n  WebBrowserRedirectResult,\n  WebBrowserMayInitWithUrlResult,\n  WebBrowserWarmUpResult,\n  WebBrowserCoolDownResult,\n  WebBrowserResultType,\n};\n\nconst emptyCustomTabsPackages: WebBrowserCustomTabsResults = {\n  defaultBrowserPackage: undefined,\n  preferredBrowserPackage: undefined,\n  browserPackages: [],\n  servicePackages: [],\n};\n\nexport async function getCustomTabsSupportingBrowsersAsync(): Promise<WebBrowserCustomTabsResults> {\n  if (!ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync) {\n    throw new UnavailabilityError('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return emptyCustomTabsPackages;\n  } else {\n    return await ExponentWebBrowser.getCustomTabsSupportingBrowsersAsync();\n  }\n}\n\nexport async function warmUpAsync(browserPackage?: string): Promise<WebBrowserWarmUpResult> {\n  if (!ExponentWebBrowser.warmUpAsync) {\n    throw new UnavailabilityError('WebBrowser', 'warmUpAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.warmUpAsync(browserPackage);\n  }\n}\n\nexport async function mayInitWithUrlAsync(\n  url: string,\n  browserPackage?: string\n): Promise<WebBrowserMayInitWithUrlResult> {\n  if (!ExponentWebBrowser.mayInitWithUrlAsync) {\n    throw new UnavailabilityError('WebBrowser', 'mayInitWithUrlAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.mayInitWithUrlAsync(url, browserPackage);\n  }\n}\n\nexport async function coolDownAsync(browserPackage?: string): Promise<WebBrowserCoolDownResult> {\n  if (!ExponentWebBrowser.coolDownAsync) {\n    throw new UnavailabilityError('WebBrowser', 'coolDownAsync');\n  }\n  if (Platform.OS !== 'android') {\n    return {};\n  } else {\n    return await ExponentWebBrowser.coolDownAsync(browserPackage);\n  }\n}\n\nexport async function openBrowserAsync(\n  url: string,\n  browserParams: WebBrowserOpenOptions = {}\n): Promise<WebBrowserResult> {\n  if (!ExponentWebBrowser.openBrowserAsync) {\n    throw new UnavailabilityError('WebBrowser', 'openBrowserAsync');\n  }\n  return await ExponentWebBrowser.openBrowserAsync(url, browserParams);\n}\n\nexport function dismissBrowser(): void {\n  if (!ExponentWebBrowser.dismissBrowser) {\n    throw new UnavailabilityError('WebBrowser', 'dismissBrowser');\n  }\n  ExponentWebBrowser.dismissBrowser();\n}\n\nexport async function openAuthSessionAsync(\n  url: string,\n  redirectUrl: string,\n  browserParams: WebBrowserOpenOptions = {}\n): Promise<WebBrowserAuthSessionResult> {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.openAuthSessionAsync) {\n      throw new UnavailabilityError('WebBrowser', 'openAuthSessionAsync');\n    }\n    return ExponentWebBrowser.openAuthSessionAsync(url, redirectUrl);\n  } else {\n    return _openAuthSessionPolyfillAsync(url, redirectUrl, browserParams);\n  }\n}\n\nexport function dismissAuthSession(): void {\n  if (_authSessionIsNativelySupported()) {\n    if (!ExponentWebBrowser.dismissAuthSession) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissAuthSession();\n  } else {\n    if (!ExponentWebBrowser.dismissBrowser) {\n      throw new UnavailabilityError('WebBrowser', 'dismissAuthSession');\n    }\n    ExponentWebBrowser.dismissBrowser();\n  }\n}\n\n/**\n * Attempts to complete an auth session in the browser.\n *\n * @param options\n */\nexport function maybeCompleteAuthSession(\n  options: { skipRedirectCheck?: boolean } = {}\n): { type: 'success' | 'failed'; message: string } {\n  if (ExponentWebBrowser.maybeCompleteAuthSession) {\n    return ExponentWebBrowser.maybeCompleteAuthSession(options);\n  }\n  return { type: 'failed', message: 'Not supported on this platform' };\n}\n\n/* iOS <= 10 and Android polyfill for SFAuthenticationSession flow */\n\nfunction _authSessionIsNativelySupported(): boolean {\n  if (Platform.OS === 'android') {\n    return false;\n  } else if (Platform.OS === 'web') {\n    return true;\n  }\n\n  const versionNumber = parseInt(String(Platform.Version), 10);\n  return versionNumber >= 11;\n}\n\nlet _redirectHandler: ((event: RedirectEvent) => void) | null = null;\n\n/*\n * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n * it with AppState\n */\n\n// Store the `resolve` function from a Promise to fire when the AppState\n// returns to active\nlet _onWebBrowserCloseAndroid: null | (() => void) = null;\n\n// If the initial AppState.currentState is null, we assume that the first call to\n// AppState#change event is not actually triggered by a real change,\n// is triggered instead by the bridge capturing the current state\n// (https://facebook.github.io/react-native/docs/appstate#basic-usage)\nlet _isAppStateAvailable: boolean = AppState.currentState !== null;\nfunction _onAppStateChangeAndroid(state: AppStateStatus) {\n  if (!_isAppStateAvailable) {\n    _isAppStateAvailable = true;\n    return;\n  }\n\n  if (state === 'active' && _onWebBrowserCloseAndroid) {\n    _onWebBrowserCloseAndroid();\n  }\n}\n\nasync function _openBrowserAndWaitAndroidAsync(\n  startUrl: string,\n  browserParams: WebBrowserOpenOptions = {}\n): Promise<WebBrowserResult> {\n  const appStateChangedToActive = new Promise(resolve => {\n    _onWebBrowserCloseAndroid = resolve;\n    AppState.addEventListener('change', _onAppStateChangeAndroid);\n  });\n\n  let result: WebBrowserResult = { type: 'cancel' };\n  const { type } = await openBrowserAsync(startUrl, browserParams);\n\n  if (type === 'opened') {\n    await appStateChangedToActive;\n    result = { type: 'dismiss' };\n  }\n\n  AppState.removeEventListener('change', _onAppStateChangeAndroid);\n  _onWebBrowserCloseAndroid = null;\n  return result;\n}\n\nasync function _openAuthSessionPolyfillAsync(\n  startUrl: string,\n  returnUrl: string,\n  browserParams: WebBrowserOpenOptions = {}\n): Promise<WebBrowserAuthSessionResult> {\n  if (_redirectHandler) {\n    throw new Error(\n      `The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`\n    );\n  }\n\n  if (_onWebBrowserCloseAndroid) {\n    throw new Error(`WebBrowser is already open, only one can be open at a time`);\n  }\n\n  try {\n    if (Platform.OS === 'android') {\n      return await Promise.race([\n        _openBrowserAndWaitAndroidAsync(startUrl, browserParams),\n        _waitForRedirectAsync(returnUrl),\n      ]);\n    } else {\n      return await Promise.race([\n        openBrowserAsync(startUrl, browserParams),\n        _waitForRedirectAsync(returnUrl),\n      ]);\n    }\n  } finally {\n    // We can't dismiss the browser on Android, only call this when it's available.\n    // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n    if (ExponentWebBrowser.dismissBrowser) {\n      ExponentWebBrowser.dismissBrowser();\n    }\n\n    _stopWaitingForRedirect();\n  }\n}\n\nfunction _stopWaitingForRedirect() {\n  if (!_redirectHandler) {\n    throw new Error(\n      `The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`\n    );\n  }\n\n  Linking.removeEventListener('url', _redirectHandler);\n  _redirectHandler = null;\n}\n\nfunction _waitForRedirectAsync(returnUrl: string): Promise<WebBrowserRedirectResult> {\n  return new Promise(resolve => {\n    _redirectHandler = (event: RedirectEvent) => {\n      if (event.url.startsWith(returnUrl)) {\n        resolve({ url: event.url, type: 'success' });\n      }\n    };\n\n    Linking.addEventListener('url', _redirectHandler);\n  });\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAAC,OAAAC,QAAA;AAAA,OAAAC,OAAA;AAAA,OAAAC,QAAA;AAGvD,OAAOC,kBAAkB;AACzB,SAUEC,oBAAoB;AAGtB,SASEA,oBAAoB;AAGtB,IAAMC,uBAAuB,GAAgC;EAC3DC,qBAAqB,EAAEC,SAAS;EAChCC,uBAAuB,EAAED,SAAS;EAClCE,eAAe,EAAE,EAAE;EACnBC,eAAe,EAAE;CAClB;AAED,OAAO,SAAeC,oCAAoCA,CAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,sCAAAC,QAAA;IAAA;MAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,IACnDd,kBAAkB,CAACQ,oCAAoC;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACpD,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,sCAAsC,CAAC;QAAA;UAAA,MAEjFG,QAAQ,CAACgB,EAAE,KAAK,SAAS;YAAAH,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAI,MAAA,WACpBd,uBAAuB;QAAA;UAAAU,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEjBjB,kBAAkB,CAACQ,oCAAoC,EAAE;QAAA;UAAA,OAAAI,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAM,IAAA;QAAA;QAAA;UAAA,OAAAN,QAAA,CAAAO,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAI1E,OAAO,SAAeC,WAAWA,CAACC,cAAuB;EAAA,OAAAb,mBAAA,CAAAC,KAAA,UAAAa,aAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAX,IAAA,GAAAW,SAAA,CAAAV,IAAA;QAAA;UAAA,IAClDd,kBAAkB,CAACqB,WAAW;YAAAG,SAAA,CAAAV,IAAA;YAAA;UAAA;UAAA,MAC3B,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,aAAa,CAAC;QAAA;UAAA,MAExDG,QAAQ,CAACgB,EAAE,KAAK,SAAS;YAAAS,SAAA,CAAAV,IAAA;YAAA;UAAA;UAAA,OAAAU,SAAA,CAAAR,MAAA,WACpB,EAAE;QAAA;UAAAQ,SAAA,CAAAV,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEIjB,kBAAkB,CAACqB,WAAW,CAACC,cAAc,CAAC;QAAA;UAAA,OAAAE,SAAA,CAAAR,MAAA,WAAAQ,SAAA,CAAAN,IAAA;QAAA;QAAA;UAAA,OAAAM,SAAA,CAAAL,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAI/D,OAAO,SAAeK,mBAAmBA,CACvCC,GAAW,EACXJ,cAAuB;EAAA,OAAAb,mBAAA,CAAAC,KAAA,UAAAiB,qBAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;QAAA;UAAA,IAElBd,kBAAkB,CAACyB,mBAAmB;YAAAG,SAAA,CAAAd,IAAA;YAAA;UAAA;UAAA,MACnC,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,qBAAqB,CAAC;QAAA;UAAA,MAEhEG,QAAQ,CAACgB,EAAE,KAAK,SAAS;YAAAa,SAAA,CAAAd,IAAA;YAAA;UAAA;UAAA,OAAAc,SAAA,CAAAZ,MAAA,WACpB,EAAE;QAAA;UAAAY,SAAA,CAAAd,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEIjB,kBAAkB,CAACyB,mBAAmB,CAACC,GAAG,EAAEJ,cAAc,CAAC;QAAA;UAAA,OAAAM,SAAA,CAAAZ,MAAA,WAAAY,SAAA,CAAAV,IAAA;QAAA;QAAA;UAAA,OAAAU,SAAA,CAAAT,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAI5E,OAAO,SAAeS,aAAaA,CAACP,cAAuB;EAAA,OAAAb,mBAAA,CAAAC,KAAA,UAAAoB,eAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;QAAA;UAAA,IACpDd,kBAAkB,CAAC6B,aAAa;YAAAE,SAAA,CAAAjB,IAAA;YAAA;UAAA;UAAA,MAC7B,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,eAAe,CAAC;QAAA;UAAA,MAE1DG,QAAQ,CAACgB,EAAE,KAAK,SAAS;YAAAgB,SAAA,CAAAjB,IAAA;YAAA;UAAA;UAAA,OAAAiB,SAAA,CAAAf,MAAA,WACpB,EAAE;QAAA;UAAAe,SAAA,CAAAjB,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEIjB,kBAAkB,CAAC6B,aAAa,CAACP,cAAc,CAAC;QAAA;UAAA,OAAAS,SAAA,CAAAf,MAAA,WAAAe,SAAA,CAAAb,IAAA;QAAA;QAAA;UAAA,OAAAa,SAAA,CAAAZ,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAIjE,OAAO,SAAeY,gBAAgBA,CACpCN,GAAW;EAAA,IAAAO,aAAA;IAAAC,MAAA,GAAAC,SAAA;EAAA,OAAA1B,mBAAA,CAAAC,KAAA,UAAA0B,kBAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;QAAA;UACXmB,aAAA,GAAAC,MAAA,CAAAI,MAAA,QAAAJ,MAAA,QAAA9B,SAAA,GAAA8B,MAAA,MAAuC,EAAE;UAAA,IAEpClC,kBAAkB,CAACgC,gBAAgB;YAAAK,SAAA,CAAAvB,IAAA;YAAA;UAAA;UAAA,MAChC,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,kBAAkB,CAAC;QAAA;UAAAyC,SAAA,CAAAvB,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEpDjB,kBAAkB,CAACgC,gBAAgB,CAACN,GAAG,EAAEO,aAAa,CAAC;QAAA;UAAA,OAAAI,SAAA,CAAArB,MAAA,WAAAqB,SAAA,CAAAnB,IAAA;QAAA;QAAA;UAAA,OAAAmB,SAAA,CAAAlB,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAGtE,OAAM,SAAUmB,cAAcA,CAAA;EAC5B,IAAI,CAACvC,kBAAkB,CAACuC,cAAc,EAAE;IACtC,MAAM,IAAI3C,mBAAmB,CAAC,YAAY,EAAE,gBAAgB,CAAC;;EAE/DI,kBAAkB,CAACuC,cAAc,EAAE;AACrC;AAEA,OAAO,SAAeC,oBAAoBA,CACxCd,GAAW,EACXe,WAAmB;EAAA,IAAAR,aAAA;IAAAS,MAAA,GAAAP,SAAA;EAAA,OAAA1B,mBAAA,CAAAC,KAAA,UAAAiC,sBAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAA/B,IAAA,GAAA+B,SAAA,CAAA9B,IAAA;QAAA;UACnBmB,aAAA,GAAAS,MAAA,CAAAJ,MAAA,QAAAI,MAAA,QAAAtC,SAAA,GAAAsC,MAAA,MAAuC,EAAE;UAAA,KAErCG,+BAA+B,EAAE;YAAAD,SAAA,CAAA9B,IAAA;YAAA;UAAA;UAAA,IAC9Bd,kBAAkB,CAACwC,oBAAoB;YAAAI,SAAA,CAAA9B,IAAA;YAAA;UAAA;UAAA,MACpC,IAAIlB,mBAAmB,CAAC,YAAY,EAAE,sBAAsB,CAAC;QAAA;UAAA,OAAAgD,SAAA,CAAA5B,MAAA,WAE9DhB,kBAAkB,CAACwC,oBAAoB,CAACd,GAAG,EAAEe,WAAW,CAAC;QAAA;UAAA,OAAAG,SAAA,CAAA5B,MAAA,WAEzD8B,6BAA6B,CAACpB,GAAG,EAAEe,WAAW,EAAER,aAAa,CAAC;QAAA;QAAA;UAAA,OAAAW,SAAA,CAAAzB,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAIzE,OAAM,SAAU2B,kBAAkBA,CAAA;EAChC,IAAIF,+BAA+B,EAAE,EAAE;IACrC,IAAI,CAAC7C,kBAAkB,CAAC+C,kBAAkB,EAAE;MAC1C,MAAM,IAAInD,mBAAmB,CAAC,YAAY,EAAE,oBAAoB,CAAC;;IAEnEI,kBAAkB,CAAC+C,kBAAkB,EAAE;GACxC,MAAM;IACL,IAAI,CAAC/C,kBAAkB,CAACuC,cAAc,EAAE;MACtC,MAAM,IAAI3C,mBAAmB,CAAC,YAAY,EAAE,oBAAoB,CAAC;;IAEnEI,kBAAkB,CAACuC,cAAc,EAAE;;AAEvC;AAOA,OAAM,SAAUS,wBAAwBA,CAAA,EACO;EAAA,IAA7CC,OAAA,GAAAd,SAAA,CAAAG,MAAA,QAAAH,SAAA,QAAA/B,SAAA,GAAA+B,SAAA,MAA2C,EAAE;EAE7C,IAAInC,kBAAkB,CAACgD,wBAAwB,EAAE;IAC/C,OAAOhD,kBAAkB,CAACgD,wBAAwB,CAACC,OAAO,CAAC;;EAE7D,OAAO;IAAEC,IAAI,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAgC,CAAE;AACtE;AAIA,SAASN,+BAA+BA,CAAA;EACtC,IAAI9C,QAAQ,CAACgB,EAAE,KAAK,SAAS,EAAE;IAC7B,OAAO,KAAK;GACb,MAAM,IAAIhB,QAAQ,CAACgB,EAAE,KAAK,KAAK,EAAE;IAChC,OAAO,IAAI;;EAGb,IAAMqC,aAAa,GAAGC,QAAQ,CAACC,MAAM,CAACvD,QAAQ,CAACwD,OAAO,CAAC,EAAE,EAAE,CAAC;EAC5D,OAAOH,aAAa,IAAI,EAAE;AAC5B;AAEA,IAAII,gBAAgB,GAA4C,IAAI;AASpE,IAAIC,yBAAyB,GAAwB,IAAI;AAMzD,IAAIC,oBAAoB,GAAY7D,QAAQ,CAAC8D,YAAY,KAAK,IAAI;AAClE,SAASC,wBAAwBA,CAACC,KAAqB;EACrD,IAAI,CAACH,oBAAoB,EAAE;IACzBA,oBAAoB,GAAG,IAAI;IAC3B;;EAGF,IAAIG,KAAK,KAAK,QAAQ,IAAIJ,yBAAyB,EAAE;IACnDA,yBAAyB,EAAE;;AAE/B;AAEA,SAAeK,+BAA+BA,CAC5CC,QAAgB;EAAA,IAAA9B,aAAA;IAAA+B,uBAAA;IAAAC,MAAA;IAAAC,qBAAA;IAAAhB,IAAA;IAAAiB,MAAA,GAAAhC,SAAA;EAAA,OAAA1B,mBAAA,CAAAC,KAAA,UAAA0D,iCAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAxD,IAAA,GAAAwD,SAAA,CAAAvD,IAAA;QAAA;UAChBmB,aAAA,GAAAkC,MAAA,CAAA7B,MAAA,QAAA6B,MAAA,QAAA/D,SAAA,GAAA+D,MAAA,MAAuC,EAAE;UAEnCH,uBAAuB,GAAG,IAAI5C,OAAO,CAAC,UAAAkD,OAAO,EAAG;YACpDb,yBAAyB,GAAGa,OAAO;YACnCzE,QAAQ,CAAC0E,gBAAgB,CAAC,QAAQ,EAAEX,wBAAwB,CAAC;UAC/D,CAAC,CAAC;UAEEK,MAAM,GAAqB;YAAEf,IAAI,EAAE;UAAQ,CAAE;UAAAmB,SAAA,CAAAvD,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAC1Be,gBAAgB,CAAC+B,QAAQ,EAAE9B,aAAa,CAAC;QAAA;UAAAiC,qBAAA,GAAAG,SAAA,CAAAnD,IAAA;UAAxDgC,IAAI,GAAAgB,qBAAA,CAAJhB,IAAI;UAAA,MAERA,IAAI,KAAK,QAAQ;YAAAmB,SAAA,CAAAvD,IAAA;YAAA;UAAA;UAAAuD,SAAA,CAAAvD,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CACb+C,uBAAuB;QAAA;UAC7BC,MAAM,GAAG;YAAEf,IAAI,EAAE;UAAS,CAAE;QAAC;UAG/BrD,QAAQ,CAAC2E,mBAAmB,CAAC,QAAQ,EAAEZ,wBAAwB,CAAC;UAChEH,yBAAyB,GAAG,IAAI;UAAC,OAAAY,SAAA,CAAArD,MAAA,WAC1BiD,MAAM;QAAA;QAAA;UAAA,OAAAI,SAAA,CAAAlD,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAGf,SAAe0B,6BAA6BA,CAC1CiB,QAAgB,EAChBU,SAAiB;EAAA,IAAAxC,aAAA;IAAAyC,MAAA,GAAAvC,SAAA;EAAA,OAAA1B,mBAAA,CAAAC,KAAA,UAAAiE,+BAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAA/D,IAAA,GAAA+D,SAAA,CAAA9D,IAAA;QAAA;UACjBmB,aAAA,GAAAyC,MAAA,CAAApC,MAAA,QAAAoC,MAAA,QAAAtE,SAAA,GAAAsE,MAAA,MAAuC,EAAE;UAAA,KAErClB,gBAAgB;YAAAoB,SAAA,CAAA9D,IAAA;YAAA;UAAA;UAAA,MACZ,IAAI+D,KAAK,yGAC2F,CACzG;QAAA;UAAA,KAGCpB,yBAAyB;YAAAmB,SAAA,CAAA9D,IAAA;YAAA;UAAA;UAAA,MACrB,IAAI+D,KAAK,6DAA6D,CAAC;QAAA;UAAAD,SAAA,CAAA/D,IAAA;UAAA,MAIzEd,QAAQ,CAACgB,EAAE,KAAK,SAAS;YAAA6D,SAAA,CAAA9D,IAAA;YAAA;UAAA;UAAA8D,SAAA,CAAA9D,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CACdG,OAAO,CAAC0D,IAAI,CAAC,CACxBhB,+BAA+B,CAACC,QAAQ,EAAE9B,aAAa,CAAC,EACxD8C,qBAAqB,CAACN,SAAS,CAAC,CACjC,CAAC;QAAA;UAAA,OAAAG,SAAA,CAAA5D,MAAA,WAAA4D,SAAA,CAAA1D,IAAA;QAAA;UAAA0D,SAAA,CAAA9D,IAAA;UAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAEWG,OAAO,CAAC0D,IAAI,CAAC,CACxB9C,gBAAgB,CAAC+B,QAAQ,EAAE9B,aAAa,CAAC,EACzC8C,qBAAqB,CAACN,SAAS,CAAC,CACjC,CAAC;QAAA;UAAA,OAAAG,SAAA,CAAA5D,MAAA,WAAA4D,SAAA,CAAA1D,IAAA;QAAA;UAAA0D,SAAA,CAAA/D,IAAA;UAKJ,IAAIb,kBAAkB,CAACuC,cAAc,EAAE;YACrCvC,kBAAkB,CAACuC,cAAc,EAAE;;UAGrCyC,uBAAuB,EAAE;UAAC,OAAAJ,SAAA,CAAAK,MAAA;QAAA;QAAA;UAAA,OAAAL,SAAA,CAAAzD,IAAA;MAAA;IAAA;EAAA,+BAAAC,OAAA;AAAA;AAI9B,SAAS4D,uBAAuBA,CAAA;EAC9B,IAAI,CAACxB,gBAAgB,EAAE;IACrB,MAAM,IAAIqB,KAAK,qGACuF,CACrG;;EAGH/E,OAAO,CAAC0E,mBAAmB,CAAC,KAAK,EAAEhB,gBAAgB,CAAC;EACpDA,gBAAgB,GAAG,IAAI;AACzB;AAEA,SAASuB,qBAAqBA,CAACN,SAAiB;EAC9C,OAAO,IAAIrD,OAAO,CAAC,UAAAkD,OAAO,EAAG;IAC3Bd,gBAAgB,GAAG,SAAAA,iBAAC0B,KAAoB,EAAI;MAC1C,IAAIA,KAAK,CAACxD,GAAG,CAACyD,UAAU,CAACV,SAAS,CAAC,EAAE;QACnCH,OAAO,CAAC;UAAE5C,GAAG,EAAEwD,KAAK,CAACxD,GAAG;UAAEwB,IAAI,EAAE;QAAS,CAAE,CAAC;;IAEhD,CAAC;IAEDpD,OAAO,CAACyE,gBAAgB,CAAC,KAAK,EAAEf,gBAAgB,CAAC;EACnD,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}