{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Ping\\\\pingaina\\\\src\\\\components\\\\molecules\\\\SliderPainSymptoms.tsx\";\nimport React from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SubTitle from \"../atoms/SubTitle\";\nimport colors from \"../../styles/colors\";\nimport layout from \"../../styles/layout\";\nimport i18n from \"../../i18n/i18n\";\nvar SliderPainSymptoms = function SliderPainSymptoms(_ref) {\n  var painSymptoms = _ref.painSymptoms,\n    onPressPainSymptom = _ref.onPressPainSymptom;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, Object.keys(painSymptoms).map(function (pain, index) {\n    return React.createElement(View, {\n      key: pain,\n      style: [styles.painContainer, {\n        marginTop: index === 0 ? layout.padding : layout.padding / 4\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, React.createElement(SubTitle, {\n      style: styles.pain,\n      text: i18n.t(\"report.\" + pain),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onPressPainSymptom(pain, !painSymptoms[pain]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, painSymptoms[pain] ? React.createElement(MaterialCommunityIcons, {\n      name: \"checkbox-marked\",\n      size: 36,\n      color: colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }) : React.createElement(MaterialCommunityIcons, {\n      name: \"checkbox-blank\",\n      size: 36,\n      color: colors.greyLight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })));\n  }));\n};\nexport default SliderPainSymptoms;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center'\n  },\n  painContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  pain: {\n    marginBottom: 0,\n    width: 170\n  }\n});","map":{"version":3,"names":["React","MaterialCommunityIcons","StyleSheet","TouchableOpacity","View","SubTitle","colors","layout","i18n","SliderPainSymptoms","_ref","painSymptoms","onPressPainSymptom","createElement","style","styles","container","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","pain","index","key","painContainer","marginTop","padding","text","t","onPress","name","size","color","primary","greyLight","create","justifyContent","flexDirection","alignItems","marginBottom","width"],"sources":["C:/Users/HP/Documents/Ping/pingaina/src/components/molecules/SliderPainSymptoms.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\r\n\r\nimport SubTitle from '@components/atoms/SubTitle';\r\n\r\nimport { PainSymptoms } from '@store/types';\r\n\r\nimport colors from '@styles/colors';\r\nimport layout from '@styles/layout';\r\nimport i18n from '@i18n/i18n';\r\n\r\ntype Props = {\r\n  onPressPainSymptom: (pain: keyof PainSymptoms, value: boolean) => void;\r\n  painSymptoms: PainSymptoms;\r\n};\r\n\r\nconst SliderPainSymptoms = ({\r\n  painSymptoms,\r\n  onPressPainSymptom,\r\n}: Props): ReactElement => {\r\n  return (\r\n    <View style={styles.container}>\r\n      {Object.keys(painSymptoms).map(\r\n        (pain: keyof PainSymptoms, index: number) => {\r\n          return (\r\n            <View\r\n              key={pain}\r\n              style={[\r\n                styles.painContainer,\r\n                {\r\n                  marginTop: index === 0 ? layout.padding : layout.padding / 4,\r\n                },\r\n              ]}\r\n            >\r\n              <SubTitle style={styles.pain} text={i18n.t(`report.${pain}`)} />\r\n              <TouchableOpacity\r\n                onPress={() => onPressPainSymptom(pain, !painSymptoms[pain])}\r\n              >\r\n                {painSymptoms[pain] ? (\r\n                  <MaterialCommunityIcons\r\n                    name=\"checkbox-marked\"\r\n                    size={36}\r\n                    color={colors.primary}\r\n                  />\r\n                ) : (\r\n                  <MaterialCommunityIcons\r\n                    name=\"checkbox-blank\"\r\n                    size={36}\r\n                    color={colors.greyLight}\r\n                  />\r\n                )}\r\n              </TouchableOpacity>\r\n            </View>\r\n          );\r\n        },\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SliderPainSymptoms;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n  },\r\n  painContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  pain: {\r\n    marginBottom: 0,\r\n    width: 170,\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAwB,OAAO;AAC3C,SAASC,sBAAsB,QAAQ,oBAAoB;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAG5D,OAAOC,QAAQ;AAIf,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,IAAI;AAOX,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAGG;EAAA,IAFzBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IACZC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;EAElB,OACEZ,KAAA,CAAAa,aAAA,CAACT,IAAI;IAACU,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BC,MAAM,CAACC,IAAI,CAACZ,YAAY,CAAC,CAACa,GAAG,CAC5B,UAACC,IAAwB,EAAEC,KAAa,EAAK;IAC3C,OACE1B,KAAA,CAAAa,aAAA,CAACT,IAAI;MACHuB,GAAG,EAAEF,IAAK;MACVX,KAAK,EAAE,CACLC,MAAM,CAACa,aAAa,EACpB;QACEC,SAAS,EAAEH,KAAK,KAAK,CAAC,GAAGnB,MAAM,CAACuB,OAAO,GAAGvB,MAAM,CAACuB,OAAO,GAAG;MAC7D,CAAC,CACD;MAAAb,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEFrB,KAAA,CAAAa,aAAA,CAACR,QAAQ;MAACS,KAAK,EAAEC,MAAM,CAACU,IAAK;MAACM,IAAI,EAAEvB,IAAI,CAACwB,CAAC,aAAWP,IAAM,CAAE;MAAAR,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAChErB,KAAA,CAAAa,aAAA,CAACV,gBAAgB;MACf8B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMrB,kBAAkB,CAACa,IAAI,EAAE,CAACd,YAAY,CAACc,IAAI,CAAC,CAAC;MAAA,CAAC;MAAAR,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE5DV,YAAY,CAACc,IAAI,CAAC,GACjBzB,KAAA,CAAAa,aAAA,CAACZ,sBAAsB;MACrBiC,IAAI,EAAC,iBAAiB;MACtBC,IAAI,EAAE,EAAG;MACTC,KAAK,EAAE9B,MAAM,CAAC+B,OAAQ;MAAApB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CAAC,GAEFrB,KAAA,CAAAa,aAAA,CAACZ,sBAAsB;MACrBiC,IAAI,EAAC,gBAAgB;MACrBC,IAAI,EAAE,EAAG;MACTC,KAAK,EAAE9B,MAAM,CAACgC,SAAU;MAAArB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACzB,CAEa,CACd,CAAC;EAEX,CACF,CACI,CAAC;AAEX,CAAC;AAED,eAAeZ,kBAAkB;AAEjC,IAAMM,MAAM,GAAGb,UAAU,CAACqC,MAAM,CAAC;EAC/BvB,SAAS,EAAE;IACTwB,cAAc,EAAE;EAClB,CAAC;EACDZ,aAAa,EAAE;IACba,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDjB,IAAI,EAAE;IACJkB,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}